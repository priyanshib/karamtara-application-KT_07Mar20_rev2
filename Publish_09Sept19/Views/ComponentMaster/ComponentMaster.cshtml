@model Karamtara_Application.Models.ComponentModel
@{
    ViewBag.Title = "ComponentMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-sm-12">
        <div class="row ProdNmBlock p-1">
            <div class="col-sm-8 align-items-center d-flex">
                <img src="/Assets/images/prodMaster.png" height="20px">  Component Master
            </div>
            <div class="col-sm-4 text-right">
                <button type="button" class="createComponent blueBtn" id="btnCreateComponent" data-toggle="modal" onclick="openCompModal();" @*data-target="#createComponentModal"*@>Create new Component</button>
            </div>
        </div>
    </div>
    <div class="col-sm-12 p-0">
        <div class="tableBlock">
            <table class="table m-0 modalTable">
                <tr>
                    <th class="catNo">Catalogue No</th>
                    <th class="compoentNm">Component </th>
                    <th class="rawMater">Raw Material</th>
                    <th class="CompoSize">Size</th>
                    @*<th class="compoQty">Quantity</th>*@
                    <th class="UnitGross"> Unit Gross Weight<br />(KG)</th>
                    <th class="unitNet">Unit Net Weight<br />(KG)</th>
                    <th class="galReq">Galvanized Required</th>
                    <th class="galReq">Galvanized Material</th>
                    <th class="drawNo">Drawing Number</th>
                    <th class="matGrid">Material Grade</th>
                    <th class="editMat"> </th>
                </tr>
                @foreach (var item in Model.ComponentList)
                {
                    <tr>
                        <td class="catNo">@Html.TextBoxFor(m => @item.CatalogueNo, new { @readonly = "readonly", @id = "ComponentId" + @item.CatalogueNo }) </td>
                        <td class="compoentNm">
                            <span class="tooltipHover c-pointer">
                                @Html.TextBoxFor(m => @item.ComponentName, new { @readonly = "readonly", @id = "ComponentName" + @item.ComponentId, @class = "rawMater  c-pointer" })
                                <span class="tooltipShow">@item.ComponentName</span>
                            </span>
                        </td>
                        <td class="rawMater">
                            <span class="tooltipHover c-pointer">
                                @Html.TextBoxFor(m => @item.RawMaterial, new { @readonly = "readonly", @id = "RawMaterial" + @item.ComponentId ,@class= " c-pointer" })
                                <span class="tooltipShow">@item.RawMaterial</span>
                            </span>
                        </td>
                        <td class="CompoSize">
                            <span class="tooltipHover c-pointer">
                                @Html.TextBoxFor(m => @item.Size, new { @readonly = "readonly", @id = "Size" + @item.ComponentId , @class= " c-pointer" })
                                <span class="tooltipShow">@item.Size</span>
                            </span>
                        </td>
                        @*<td class="compoQty">@Html.TextBoxFor(m => @item.Qty, new { @readonly = "readonly", @id = "Qty" + @item.ComponentId, @class = "text-center" })</td>*@
                        <td class="UnitGross">@Html.TextBoxFor(m => @item.UnitGrWt, new { @readonly = "readonly", @id = "UnitGrWt" + @item.ComponentId, @class = "text-center" })</td>
                        <td class="unitNet">@Html.TextBoxFor(m => @item.UnitNetWt, new { @readonly = "readonly", @id = "UnitNetWt" + @item.ComponentId, @class = "text-center" })</td>
                        <td class="galReq">@Html.TextBoxFor(m => @item.GalvanizedRequired, (item.GalvanizedRequired ? "Yes" : "No"), new { @readonly = "readonly", @id = "GalvanizedRequired" + @item.ComponentId, @class = "text-center" })</td>
                        <td class="galMat"> @Html.TextBoxFor(m => @item.GalvanizedMaterial, new { @readonly = "readonly", @id = "GalvanizedMaterial" + @item.ComponentId, @class = "text-center" })</td>
                        <td class="drawNo">
                            <span class="tooltipHover c-pointer">
                                @Html.TextBoxFor(m => @item.DrawingNo, new { @readonly = "readonly", @id = "DrawingNo" + @item.ComponentId, @class = "text-center c-pointer" })
                                <span class="tooltipShow">@item.DrawingNo</span>
                            </span>
                        </td>
                        <td class="matGrid">@Html.TextBoxFor(m => @item.MaterialGrade, new { @readonly = "readonly", @id = "MaterialGrade" + @item.ComponentId, @class = "text-center" }) </td>
                        <td class="editMat">
                            <div class="editDelDiv  d-flex">
                                <button type="button" class="commonBtn" id="Editbtn'+@item.ComponentId+'" onclick="EditBtnClick(@item.ComponentId);"><img src="/Assets/images/editPensil.svg" width="16px" class="mr-1"></button>
                                <button type="button" class="commonBtn" id="Editbtn'+@item.ComponentId+'" onclick="DeleteBtnClick(@item.ComponentId);"><img src="/Assets/images/delete.svg" width="20px" class="mr-1"></button>
                            </div>
                        </td>
                    </tr>@*@item.UnitGrWt,@item.UnitNetWt,@item.DrawingNo,@item.Size,@item.MaterialGrade,@item.RawMaterialId,@item.GalvanizedRequired
                        <button type="button" name="saveButton" class="saveBtn" id="Savebtn'+@item.ComponentId+'" onclick="SaveBtnClick(@item.ComponentId);">Save</button>*@
                }
            </table>
            @*<div class="text-right m-2">
                    <button type="button" class="submitBomBtn saveBtn AddRow" id="AddRowsButtonId" onclick="AddRowsModal();">Add More Rows</button>
                    <button type="button" class="createComponent sucessEnq" id="createCompoSubmit" data-toggle="modal">Submit</button>
                </div>*@

        </div>
    </div>
</div>



<div class="modal fade" id="editSubAssmModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered fullscreenModal" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="divEditSubAssmModel">
                @*@Html.Partial("~/Views/Shared/SubAssemblyMaster/_EditComponents.cshtml", Model)*@
                @*jahsdjahsjdhjh*@
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn  modalAssignee" id="btnAssmAdd" data-dismiss="modal">Submit</button>
                    <button type="button" class="btn  modalCancel" data-dismiss="modal" id="btnDismissModal">Cancel</button>*@

            </div>
        </div>
    </div>
</div>

<div class="modal fade " id="createComponentModal" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered fullscreenModal " role="document">
        <div class="modal-content ">
            <div class="closeMenu" data-dismiss="modal" aria-label="Close">
                <button type="button" class="close" id="xbtn">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body overflowModel">
                <div class="BomRefDtls">

                    <div class="col-sm-12 row BomRefHeader m-0">
                        Create New Component
                    </div>
                    <div class="tableBlock newCompoTable">
                        @using (Html.BeginForm("CreateComponents", "ComponentMaster", FormMethod.Post, new { @id = "CreateComponentForm" }))
                        {
                            <table class="table m-0 modalTable" id="compModalTable">
                                <tr>
                                    <th class="catNo">Catalogue No</th>
                                    <th class="compoentNm">Component </th>
                                    <th class="rawMater">Raw Material</th>
                                    <th class="CompoSize">Size</th>
                                    <th class="prodNo">Material Grade</th>
                                    <th class="drawNo">Drawing No</th>
                                    <th class="prodUnit"> Unit Gross Weight<br />(KG)</th>
                                    <th class="prodUnit">Unit Net Weight<br />(KG)</th>
                                    <th class="galReq">Galvanized Required</th>
                                    <th class="galMat">Galvanized Material</th>
                                </tr>
                                <tr>
                                    <td class="catNo">@Html.TextBox("CatNum", null, new { @class = "whiteBgInput" }) </td>
                                    <td class="compoentNm"> @Html.TextBox("CompName", null, new { @class = "whiteBgInput" })</td>
                                    <td>@Html.TextBox("RawMat", null, new { @class = "rawMater whiteBgInput" })</td>
                                    <td class="CompoSize">@Html.TextBox("Size", null, new { @class = "whiteBgInput" })</td>
                                    <td class="prodNo">@Html.TextBox("MaterialGrade", null, new { @class = "whiteBgInput" })</td>
                                    <td class="drawNo">@Html.TextBox("DrawingNo", null, new { @class = "whiteBgInput" })</td>
                                    <td class="prodUnit">@Html.TextBox("UGW", null, new { @class = "whiteBgInput" })</td>
                                    <td class="prodUnit">@Html.TextBox("UNW", null, new { @class = "whiteBgInput" })</td>
                                    <td class="galReq">
                                        <label class="container checkbox">
                                            <input type="checkbox" name="checkbox" value="0" onchange="CheckBoxClickedd(this)" id="chbox">
                                            <span class="checkmark"></span>
                                        </label>
                                    </td>
                                    <td class="galMat">
                                        <div class="col-sm-12 pl-0" id="radiobtn">
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <label class="container mb-0">
                                                        Zinc
                                                        <input type="radio" name="radio_0" value="Zinc" id="radio1" onchange="radioSelected(this, 1);" disabled>
                                                        <span class="checkmark"></span>
                                                    </label>
                                                </div>
                                                <div class="col-sm-6">
                                                    <label class="container mb-0">
                                                        EG
                                                        <input type="radio" name="radio_0" value="EG" id="radio2" onchange="radioSelected(this, 2);" disabled>
                                                        <span class="checkmark"></span>
                                                    </label>
                                                </div>
                                                <p id="status" />
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                            <div class="text-right m-2">
                                <button type="button" class="submitBomBtn saveBtn AddRow" id="AddRowsButtonId" onclick="AddRowsModal();">Add More Rows</button>
                                <button type="button" class="createComponent sucessEnq" id="createCompoSubmit">Submit</button>
                               
                            </div>
                        }

                       
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="successModel" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header modelHeader">
                <span class="modal-title modalMsgTitle" id="modalTitle"></span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label id="modalBody" class="lableMsg">  </label>
            </div>
            <div class="modal-footer">
                <button type="button" class="submitBomBtn publishBtn" id="modalOkButton">OK</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function createSuccess(id) {
        $('#modalTitle').html('Success');
        $('#modalBody').html('Components created successfully');
        $("#modalOkButton").attr('onclick', 'window.location.reload();');
        $("#successModel").modal('show');
    }

    function createFailure() {
        $('#modalTitle').html('Failure');
        $('#modalBody').html('Components could not be created due to some error. Please try again');
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
    }

    $('#createComponentModal').on('hidden.bs.modal', function (e) {
        $(this)
            .find("input,textarea,select")
            .val('')
            .end()
            .find("input[type=checkbox], input[type=radio]")
            .prop("checked", "")
            .end();
    });
    
    function EditBtnClick(ComponentId)/*UnitGrWt, UnitNetWt, DrawingNo, Size, MaterialGrade, RawMaterialId, GalvanizedRequired*/ {
        $.ajax({
            type: "GET",
            url: '/ComponentMaster/GetComponentMaster',
            dataType: "html",
            data: { ComponentId: ComponentId },
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (data) {
                //$('#divAssmDetails').html(data);
                // $("#txtAssmAutoComplete").val(value);
                //  AddRows();
                $("#divEditSubAssmModel").html(data);
                $('#editSubAssmModal').modal('show');
            },
            error: function (data) {
            }
        });
    }

    function DeleteBtnClick(ComponentId)/*UnitGrWt, UnitNetWt, DrawingNo, Size, MaterialGrade, RawMaterialId, GalvanizedRequired*/ {
        if (confirm("Are you sure you want to delete this component? This action cannot be undone")) {
            $.ajax({
                type: "post",
                url: '/ComponentMaster/DeleteComponentMaster',
                dataType: "JSON",
                data: { ComponentId: ComponentId },
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (data) {
                    setTimeout(function () {
                        location.reload();
                    }, 1000);
                    alert("Component deleted successfully");
                },
                error: function (data) {
                }
            });
        }
    }

    function openCompModal() {
        //alert($("#compModalTable tr").length);
        $("#createComponentModal").modal('show');
        //alert($("#compModalTable tr").length);
        if ($("#compModalTable tr").length < 5) {
            AddRowsModal();
        }

        $(".rawMater").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/RawMaterialMaster/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response(data);
                    },
                    error: function (response) {
                    },
                    failure: function (response) {
                    }
                });
            },
            select: function (e, ui) {
                $(this).val(ui.item.label);
                return false;
            },
            minLength: 2,
            autoFocus: true,
            change: function (event, ui) {
                if (ui.item == null) {
                    $(this).val("");
                    $(this).focus();
                }
            }
        });
    };

    function AddRowsModal() {

        $.each(new Array(5), function (index) {
            index++;
            $('#compModalTable tr:last')
                .after('<tr> <td class="catNo"> <input type="text" class="whiteBgInput" name="CatNum" id="CatNum_' + index + '" > </td >' +
                    '<td class="compoentNm"> <input type="text" class="whiteBgInput" name="CompName" id="CompName_' + index + '"> </td>' +
                    '<td> <input type="text"  class="rawMater whiteBgInput" name="RawMat" id="RawMat_' + index + '" class="rawMater"> </td>' +
                    '<td class="prodNo"> <input type="text" class="whiteBgInput" name="Size" id="Size_' + index + '"> </td>' +
                    '<td class="prodNo"> <input type="text" class="whiteBgInput" name="MaterialGrade" id="MaterialGrade_' + index + '"> </td>' +
                    '<td class="drawNo"> <input type="text" class="whiteBgInput" name="DrawingNo" id="DrawingNo_' + index + '"> </td>' +
                    '<td class="prodUnit"> <input type="text" class="whiteBgInput" name="UGW" id="UGW_' + index + '"> </td>' +
                    '<td class="prodUnit"> <input type="text" class="whiteBgInput" name="UNW" id="UNW_' + index + '"> </td> <td class="galReq">' +
                    '<label class="container checkbox" id="lab_' + index + '">' +
                    '<input type="checkbox" name="checkbox" id="chbox' + index + '" value="' + index + '" onchange="CheckBoxClicked(this,' + index + ')"><span class="checkmark" id="chkspan_' + index + '"></span> </label></td >' +
                    '<td class="galMat"><div class="col-sm-12 pl-0"><div class="row">' +
                    '<div class="col-sm-6"><label class="container mb-0">Zinc<input type="radio" value="Zinc" id="radio1' + index + '" name="radio_' + index + '" onchange="radioSelected(this, 1);" disabled><span class="checkmark" ></span></label></div>' +
                    '<div class="col-sm-6"><label class="container mb-0">EG<input type="radio" value="EGG" id="radio2' + index + '" name="radio_' + index + '" onchange="radioSelected(this, 2);" disabled><span class="checkmark" ></span> </label></div>' +
                    '</div> </div></td></tr>');
        });
    };

    $("#createCompoSubmit").on('click', function () {

        $('.modalTable input[type=text]').each(function () {
            var getText = $(this).val() + '~!';
            $(this).val(getText);
        });
        $('.modalTable input[type=checkbox]').each(function () {
            var getText = $(this).val() + '~!';
            $(this).val(getText);
        });
        var formSerialized = $("#CreateComponentForm").serialize();

        $('.modalTable input[type=text]').each(function () {
            var getText = $(this).val().replace('~!', '');
            $(this).val(getText);
        });
        $('.modalTable input[type=checkbox]').each(function () {
            var getText = $(this).val().replace('~!', '');
            $(this).val(getText);
        });

        if (!validation())
            return;

        $.ajax({
            type: 'POST',
            url: "/ComponentMaster/CreateComponents",
            data: formSerialized,
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data == true || data == "true") {
                    $('#createComponentModal').on('hidden.bs.modal', function (e) {
                        $(this)
                            .find("input,textarea,select")
                            .val('')
                            .end()
                            .find("input[type=checkbox], input[type=radio]")
                            .prop("checked", "")
                            .end();
                    });

                    $('#createComponentModal').modal('hide');
                    createSuccess();
                }
                else {
                    createFailure();
                }
            },
            error: function (response) {
            }
        });
    });

    function validation() {
        var length = $("#compModalTable tr").length - 1;

        if ($("#CompName").val() != '' || $("#CatNum").val() != '') {
            if ($("#CompName").val() == '') {
                $("#CompName").focus();
                alert("Please Enter Component Name");
                return false;
            }
            else if ($("#RawMat").val() == '') {
                $("#RawMat").focus();
                alert("Please Select Raw Material");
                return false;
            }
            else if ($("#UGW").val() == '') {
                $("#UGW").focus();
                alert("Please Enter Unit Gross Weight");
                return false;
            }
            else if ($("#UNW").val() == '') {
                $("#UNW").focus();
                alert("Please Select Unit Net Weight");
                return false;
            }
        }

        for (let i = 0; i < length; i++) {
            if ($("#CompName_" + i).val() != '' || $("#CatNum_" + i).val() != '') {

                if ($("#CompName_" + i).val() == '') {
                    $("#CompName_" + i).focus();
                    alert("Please Enter Component Name");
                    return false;
                }
                else if ($("#RawMat_" + i).val() == '') {
                    $("#RawMat_" + i).focus();
                    alert("Please Select Raw Material");
                    return false;
                }
                else if ($("#UGW_" + i).val() == '') {
                    $("#UGW_" + i).focus();
                    alert("Please Enter Unit Gross Weight");
                    return false;
                }
                else if ($("#UNW_" + i).val() == '') {
                    $("#UNW_" + i).focus();
                    alert("Please Select Unit Net Weight");
                    return false;
                }
            }
        }

        if ($("#CompName").val() == '' || $("#CatNum").val() == '') {
            alert("Please Fill all fields");
            return false;
        }

        return true;
    }

    function radioSelected(e, i) {
        $(e).val(i);
    }

    function CheckBoxClickedd(sender) {
        if (document.getElementById('chbox').checked) {
            document.getElementById("radio1").removeAttribute('disabled');
            document.getElementById("radio2").removeAttribute('disabled');
            document.getElementById("radio1").checked = true;
        }
        else {
            document.getElementById("radio1").disabled = true;
            document.getElementById("radio2").disabled = true;
            document.getElementById('radio1').checked = false;
            document.getElementById('radio2').checked = false;
        }
    }

    function CheckBoxClicked(e, i) {
        if (document.getElementById('chbox' + i + '').checked) {
            document.getElementById('radio1' + i + '').removeAttribute('disabled');
            document.getElementById('radio2' + i + '').removeAttribute('disabled');
            document.getElementById('radio1' + i + '').checked = true;
        }
        else {
            document.getElementById('radio1' + i + '').disabled = true;
            document.getElementById('radio2' + i + '').disabled = true;
            document.getElementById('radio1' + i + '').checked = false;
            document.getElementById('radio2' + i + '').checked = false;
        }
    }
    //function SaveBtnClick(i) {
    //    alert("Hi");
    //    var ComponentId = $("#ComponentId" + i).val();
    //    var ComponentName = $("#ComponentName" + i).val();
    //    var RawMaterialId = $("#RawMaterialId" + i).val();
    //    var Size = $("#Size" + i).val();
    //    var Qty = $("#Qty" + i).val();
    //    var UnitGrWt = $("#UnitGrWt" + i).val();
    //    var UnitNetWt = $("#UnitNetWt" + i).val();
    //    var GalvanizedRequired = $("#GalvanizedRequired" + i).val();
    //    var GalvanizedMaterial = $("#GalvanizedMaterial" + i).val();
    //    var DrawingNo = $("#DrawingNo" + i).val();
    //    var MaterialGrade = $("#MaterialGrade" + i).val();
    //    $.ajax({
    //        type: "post",
    //        url: "/SubAssemblyMaster/UpdateComponenetMaster",
    //        dataType: "JSON",
    //        data: { ComponentId: ComponentId, ComponentName: ComponentName, RawMaterialId: RawMaterialId, Size: Size, Qty: Qty, UnitGrWt: UnitGrWt, UnitNetWt: UnitNetWt, GalvanizedRequired: GalvanizedRequired, GalvanizedMaterial: GalvanizedMaterial, DrawingNo: DrawingNo, MaterialGrade: MaterialGrade},
    //        //contentType: "application/x-www-form-urlencoded;charset=utf-8",
    //        success: function (data) {
    //            //$('#AssemblyList').html(data);
    //            //HighlightFirstRow();
    //        },
    //        error: function (err) {
    //        }
    //    });
    //}
    $(document).ready(function () {

        $('input').each(function (index) {
            if ($(this).val().length == 0) {
                // alert("valute is 0");
                $(this).closest(".tooltipHover").remove();
            }
        });


    });


</script>

