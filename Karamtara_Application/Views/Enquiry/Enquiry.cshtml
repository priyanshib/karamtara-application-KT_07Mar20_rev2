@model Karamtara_Application.Models.EnquiryModel
@{
    ViewBag.Title = "Enquiry Master";
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("EnquiryList", "Enquiry", new { IsPublished = false }, FormMethod.Post, new { @id = "CreateEnquiryForm", enctype = "multipart/form-data" }))
{
    <div class="main-content">
        <div class="row">
            <div class="col-sm-12 collapseSide" id="checkClass">
                @Html.Partial("~/Views/Shared/Enquiry/_EnquiryList.cshtml", Model)
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header ">
                    <h5 class="modal-title">Add Technical Query</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body p-4 textareaDiv">

                    @Html.TextArea("TechnicalQuery", null, new { @class = "w-100 text-left pl-10 pr-10", @row = 4, @id = "comment" })
                    @*<input type="file" value="" id="txtDrawingFileName" name="file" />*@
                </div>
                <div class="modal-footer">
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-6 pl-0 c-pointer">
                                <input type="file" name="" id="queryFile" class="inputfile" />
                                <label for="queryFile" class="inputfileLable" id="labelQueryFile"><img src="~/Assets/images/attachment.png" class="mr-1" /> <span>Attachment</span></label>
                            </div>
                            <div class="col-sm-6 text-right pr-2">
                                <button type="button" class="submitBomBtn saveBtn " data-dismiss="modal">Cancel</button>
                                <button type="button" class="submitBomBtn publishBtn " id="modelSubmitComment" data-dismiss="modal">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="successModel" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header modelHeader">
                    <span class="modal-title modalMsgTitle" id="modalTitle"></span>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <label id="modalBody" class="lableMsg">  </label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="submitBomBtn publishBtn" id="modalOkButton">OK</button>
                </div>
            </div>
        </div>
    </div>
}
@*<div class="loaderGif" style="display:none" id="enquiryLoader">
    <img src="~/Assets/images/loader2.gif" style="width:80px; height:80px" />
</div>*@


<script>
    /*** upload file styleing */
    //'use strict';

    (function (document, window, index) {
        var inputs = document.querySelectorAll('.inputfile');
        Array.prototype.forEach.call(inputs, function (input) {
            var label = input.nextElementSibling,
                labelVal = label.innerHTML;

            input.addEventListener('change', function (e) {
                var isValid = ValidateFile(this);
                if (isValid) {
                    var fileName = '';
                    if (this.files && this.files.length > 1)
                        fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
                    else
                        fileName = e.target.value.split('\\').pop();

                    if (fileName)
                        label.querySelector('span').innerHTML = fileName;
                    else
                        label.innerHTML = labelVal;
                }
            });

            // Firefox bug fix
            input.addEventListener('focus', function () { input.classList.add('has-focus'); });
            input.addEventListener('blur', function () { input.classList.remove('has-focus'); });
        });
    }(document, window, 0));

    function successModal() {
        $('#modalTitle').html('Success');
        $('#modalBody').html('Enquiry published successfully');
        $("#modalOkButton").attr('onclick', "window.location.reload();");
        $("#successModel").modal('show');
    };

    function failureModal() {
        $('#modalTitle').html('Failure');
        $('#modalBody').html('Error: While publishing the enquiry.');
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
    };

    //options menu
    $(document).ready(function () {

        $(".optionSpan").click(function () {
            $(this).next('.ActnActivities').toggle(200);
        });

        $(".closeMenu").click(function () {
            $(".ActnActivities").hide();
        })

        $(document).mouseup(function (e) {
            var container = $(".ActnActivities");
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                container.fadeOut();
            }
        });
    });

</script>
