@model Karamtara_Application.Models.ComponentModel


<div class="Catgdetails tableBlock" id="divProdEdit">
    @using (Html.BeginForm("SubmitCompMaster", "ComponentMaster", FormMethod.Post, new { @id = "SubComMasForm" }))
    {
        <div class="row" id="editCompDiv">
            <div class="col-sm-12">
           <table class="table prodDetails" id="prodTbl2">
               <tr>
                   <th class="ComNo">Catalogue No</th>
                   <th class="comName">Component Name</th>
                   <th class="comRawMat">Raw Material</th>
                   <th class="compSize">Size</th>
                   @*<th class="catNo">Qty</th>*@
                   <th class="unitGrwt text-center">UnitGrWt <span class="position-relative float-left w-100" style="top:5px">(Kg)</th>
                   <th class="unNetwt text-center">UnitNetWt <span class="position-relative float-left w-100" style="top:5px">(Kg)</th>
                   <th class="galReq">GAL. REQ.</th>
                   <th class="galReq">GAL. TYPE</th>
                   <th class="drawNo">Drawing No</th>
                   <th class="MaterialGrid">Material Grade</th>
                   <th class="MaterialGrid">Unit</th>
               </tr>
               <tr>
                   <td class="catNo">@Html.TextBoxFor(m => Model.CatalogueNo, new {  @id = "ComponentId" + Model.ComponentId, @class = "whiteBgInput" }) </td>
                   @Html.HiddenFor(x => x.ComponentId)
                   <td class="compoentNm"> @Html.TextBoxFor(m => Model.ComponentName, new {  @id = "CompName", @class = "whiteBgInput" })</td>
                   <td class="RawMaterialId">@Html.TextBoxFor(m => Model.RawMaterial, new { @id = "RawMat", @class = "rawMater whiteBgInput" })</td>
                   <td class="CompoSize">@Html.TextBoxFor(m => Model.Size, new { @id = "Size" + Model.ComponentId, @class = "whiteBgInput" })</td>
                   <td class="prodUnit">@Html.TextBoxFor(m => Model.UnitGrWt, Model.UnitGrWt.ToString("N3"), new { @id = "UGW", @class = "whiteBgInput validateField", @type = "number", @step = "any" })</td>
                   <td class="prodUnit">@Html.TextBoxFor(m => Model.UnitNetWt, Model.UnitNetWt.ToString("N3"), new { @id = "UNW", @class = "whiteBgInput validateField", @type = "number", @step = "any" })</td>
                   <td class="galReq">@Html.DropDownListFor(x => x.GalvanizedRequiredInt, new SelectList(Model.GalvanizedRequiredList, "Value", "Text", Model.GalvanizedRequiredInt), new { @class = "browser-default custom-select whiteBgInput " }) </td>
                   <td class="galReq">@Html.DropDownListFor(x => x.GalvanizedMaterial, new SelectList(Model.GalvanizedMaterialList, "Id", "Element", Model.GalvanizedMaterial), new { @class = "browser-default custom-select whiteBgInput " }) </td>
                   @*<td class="galMat"> @Html.TextBoxFor(m => Model.GalvanizedMaterial, new { @readonly = "readonly", @id = "GalvanizedMaterial" + Model.ComponentId })</td>*@
                   <td class="DrawingNo">@Html.TextBoxFor(m => Model.DrawingNo, new { @id = "DrawingNo" + Model.ComponentId, @class = "whiteBgInput" }) </td>
                   <td class="MaterialGrid">@Html.TextBoxFor(m => Model.MaterialGrade, new { @id = "MaterialGrade" + Model.ComponentId, @class = "whiteBgInput" }) </td>
                   <td class="unit">@Html.DropDownListFor(x => x.UnitId, new SelectList(Model.UnitList, "Id", "UnitName", Model.UnitId), new { @class = "browser-default custom-select whiteBgInput" }) </td>
               </tr>
                    @*rowCount++;*@
                </table>
           <div class="text-right">
               <span id="errorSpan" class="errorBlock" style="display:none">Error</span>
               <button type="button" class="submitBomBtn publishBtn" id="btnProdSaveBtn">Save</button>
           </div>
            </div>
            </div>
    }
</div>

    <script>
        $(".rawMater").autocomplete({
            source: function (request, response) {                      
                $.ajax({
                    url: '/RawMaterialMaster/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response(data);
                    },
                    error: function (response) {
                    },
                    failure: function (response) {
                    }
                });
            },
            select: function (e, ui) {
                $(this).val(ui.item.label);
                return false;
            },
            minLength: 2,
            autoFocus: true,
            change: function (event, ui) {
                if (ui.item == null) {
                    $(this).val("");
                    $(this).focus();
                }
            },
            create: function () {
                $(this).data("ui-autocomplete")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "<span class='float-right'><img src='../Assets/images/5.png' width='20px'></span></div>")
                        .appendTo(ul);
                };
            },

        });

        $('#btnProdSaveBtn').click(function () {
            if (!validation())
                return;
            $("#SubComMasForm").submit();
        });

        document.querySelectorAll(".validateField").forEach(x => {
            x.addEventListener("keyup", function () {
                if (x.type == "number") {
                    if (x.value.length > 5) {
                        x.classList.add('invalid');
                        x.setAttribute('style', 'border-bottom:2px solid red');
                    }
                    else {
                        x.classList.remove('invalid');
                        x.removeAttribute('style');
                    }
                }
                else {
                    x.removeAttribute('style');
                }
            });
        });

        function validation() {

            var tempData = true;
            document.querySelectorAll("#editCompDiv input").forEach(x => {
                if (x.classList.contains('invalid')) {
                    tempData = false;
                    return false;
                };
            });

            if (tempData == false)
                return false;

            if ($("#RawMat").val() == '') {
                //ShowSnackBar('here');
                $("#RawMat").focus();
                $("#errorSpan").attr('style', 'display:none');
                $("#RawMat").attr('style', 'border-bottom:2px solid red');
                return false;
            }
            else if ($("#UGW").val() == '') {
                $("#UGW").focus();
                $("#errorSpan").attr('style', 'display:none');
                $("#UGW").attr('style', 'border-bottom:2px solid red');
                return false;
            }
            else if ($("#UNW").val() == '') {
                $("#UNW").focus();
                $("#errorSpan").attr('style', 'display:none');
                $("#UNW").attr('style', 'border-bottom:2px solid red');
                return false;
            }
            else if (Number($("#UGW").val()) < Number($("#UNW").val())) {
                $("#UGW").focus();
                $("#UGW").attr('style', 'border-bottom:2px solid red');
                $("#UNW").attr('style', 'border-bottom:2px solid red');
                $("#errorSpan").html("Gross Weight cannot be less than Net Weight");
                $("#errorSpan").attr('style', 'display:block');
                return false;
            }
            else if ($("#UGW").val().length > 5) {
                $("#UGW").focus();
                $("#UGW").attr('style', 'border-bottom:2px solid red');
                $("#errorSpan").html("Only 3 digits are allowed after decimal");
                $("#errorSpan").attr('style', 'display:block');
                return false;
            }
            else if ($("#UNW").val().length > 5) {
                $("#UNW").focus();
                $("#UNW").attr('style', 'border-bottom:2px solid red');
                $("#errorSpan").html("Only 3 digits are allowed after decimal");
                $("#errorSpan").attr('style', 'display:block');
                return false;
            }
            else return true;
        }
    </script>