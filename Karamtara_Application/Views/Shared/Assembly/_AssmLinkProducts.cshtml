@model Karamtara_Application.Models.AssemblyMasterModel
@{
    int count = 1;
}
@if (Convert.ToInt32(TempData["CreateAssSuccess"]) == 1)
{
    <script>ShowSnackBar("File uploaded successfully");</script>
}
else
{
    <script>console.log(false);</script>
}

@using (Html.BeginForm("AssmProductsEditSave", "SubAssemblyMaster", FormMethod.Post, new { @id = "EditAssemblyForm", enctype = "multipart/form-data" }))
{
    <div class="Catgdetails tableBlock">
        <div class="row">
            <table class="table m-0">
                <tr>
                    <th>Assemebly Code</th>
                    <th>Assembly Name</th>
                    <th>Technical Name</th>
                    <th>Drawing No</th>
                    <th>UTS Value</th>
                    <th>Unit</th>
                    <th class="fileIcon"></th>
                    @*<th class="uploadIcon"></th>*@
                </tr>
                <tr>
                    <td>
                        @*<label id="lbl1" value="Assemebly Code">@Model.AssemblyCode</label>*@
                        <input type="text" value="@Model.AssemblyCode" id="txtModelCode" name="txtAssmCode" required="required" placeholder="Enter Code" class="whiteBgInput"/>
                        <input type="hidden" name="AssmId" value="@Model.AssemblyId">
                    </td>
                    <td>
                        @*<label id="lbl2" value="Assemebly Name">@Model.AssemblyName</label>*@
                        <input type="text" value="@Model.AssemblyName" id="txtModelName" name="txtAssmName" required="required" placeholder="Enter Name"  class="whiteBgInput"/>
                    </td>
                    <td>
                        @*<label id="lbl3" value="Technical Name">@Model.AssmTechName</label>*@
                        <input type="text" value="@Model.AssmTechName" id="txtModelTechName" name="txtTechName" required="required" placeholder="Enter Technical Name"  class="whiteBgInput"/>
                    </td>
                    <td>
                        @*<label id="lbl3" value="Technical Name">@Model.DrawingNo</label>*@
                        <input type="text" value="@Model.DrawingNo" id="txtDrawingNo" name="txtDrawingNo" placeholder="Enter Drawing No"  class="whiteBgInput"/>
                    </td>
                    <td>
                        @*<label id="lbl3" value="UTS Value">@Model.UTS</label>*@
                        @Html.TextBoxFor(x => x.UTS, Model.UTS, new { @id = "ddlUTSEdit", @class = "whiteBgInput" })
                    </td>
                    <td>
                        @*<label id="lbl3" value="Technical Name">@Model.Unit</label>*@
                        @Html.DropDownListFor(m => m.UnitId, new SelectList(Model.UnitList, "Id", "UnitName"), new { @class = "browser-default custom-select whiteBgSelect", id = "ddlUnitList" })
                    </td>
                    <td class="fileIcon">
                        <span class="tooltipHover c-pointer" data-target="#uploadFile" data-toggle="modal">
                            <img src="~/Assets/images/attachment.png " />
                        </span>
                    </td>
                </tr>
            </table>
            <table class="table mb-5" id="EditSubAssemlyTable">
                <tr>
                    <th class="productNm">Product Name</th>
                    <th class="prodNo text-center">Quantity <span class="position-relative float-left w-100" style="top:5px">(Nos)</th>
                    <th class="prodNo"> Remove </th>
                </tr>
                @if (Model.MasterList != null && Model.MasterList.Count > 0)
                {
                    foreach (var item in Model.MasterList)
                    {
                        <tr>
                            <td>
                                <input type="text" name="SubAssmName" placeholder="Product Name" readonly="readonly" id="SubAssmName_@count" value="@item.Name" disabled="disabled" class="autoComp autoCompEdit" data-val="@count" onclick="AutoComp();" />
                                <input type="hidden" name="SubAssmIds" id="SubAssmId_@count" value="@item.Id" />
                                <input type="hidden" name="ItemType" id="type_@count" value="@item.MasterType" />
                            </td>
                            <td>
                                <input type="text" name="SubAssmQty" placeholder="Quantity" id="Quantity_@count" value="@item.Quantity" data-val="@item.Id" />
                            </td>
                            <td class="closesTD c-pointer text-center">
                                <img src="/Assets/images/collapseClose.svg" width="12px" id=Rem_@count onclick="ClearRow('@count')">
                            </td>
                        </tr>
                        count++;
                    }
                }
            </table>
            <div class="saveProddtls saveAssblProd">
                <button type="button" class="submitBomBtn Add saveBtn opacityBtnyelow" onclick="AddMoreRows();">Add More Rows </button>
                <button type="button" class="submitBomBtn EditProdSaveButton opacityBtngreen" id="EditAssmSaveButton">Save </button>
            </div>
        </div>
    </div>
}
<!--modal-->
@using (Html.BeginForm("AssmAttachEditSave", "AssemblyMaster", FormMethod.Post, new { @id = "EditAttachAssemblyForm", enctype = "multipart/form-data" }))
{
    <div class="modal fade" id="uploadFile" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="CreateCatDiv">
                        <input type="hidden" id="IsRemove" name="IsRemove">
                        <label> File Name :</label>
                        @if (@Model.DrawingFileName != null && @Model.DrawingFileName != "")
                        {
                            <input type="text" value="@Model.DrawingFileName" id="drawingfi" name="fileName" />
                            <input type="hidden" id="drawin" name="AssmId" value="@Model.AssemblyId">}
                        else
                        {
                            <input type="text" value="No file" id="drawingfi" name="" />
                            @*<labal>No file</labal>*@<labal></labal><labal></labal><labal></labal><labal></labal>
                            <input type="hidden" name="AssmId" value="@Model.AssemblyId">
                        }

                    </div>
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4 c-pointer d-flex align-items-center ">
                                <label for="image" class="c-pointer">
                                    <input type="file" name="image" value="" id="image" style="display:none;" />
                                    <img src="~/Assets/images/upload.svg " width="20px" class="mr-1" /> Upload
                                </label>
                            </div>
                            @if (string.IsNullOrEmpty(Model.DrawingFileName))
                            {
                                <div class="col-sm-4 d-flex align-items-center c-pointer" id="removeimg" onclick="removeFile(@Model.AssemblyId);" style="pointer-events:none"><img src="~/Assets/images/remove.svg " name="removeImg" width="20px" class="mr-1" />Remove</div>
                                <div class="col-sm-4 c-pointer d-flex align-items-center" id="downloadimg"><img src="~/Assets/images/download.svg" width="20px" class="mr-1" style="pointer-events:none" /> Download</div>
                            }
                            else
                            {
                                <div class="col-sm-4 d-flex align-items-center c-pointer" id="removeimg" onclick="removeFile(@Model.AssemblyId);"><img src="~/Assets/images/remove.svg " name="removeImg" width="20px" class="mr-1" />Remove</div>
                                <div class="col-sm-4 c-pointer d-flex align-items-center" id="downloadimg" onclick="location.href='@Url.Action(" DownloadFile", "AssemblyMaster" , new { assmId=Model.AssemblyId, fileName=Model.DrawingFileName})'"><img src="~/Assets/images/download.svg" width="20px" class="mr-1" /> Download</div>
                            }
                        </div>
                    </div>
                    <div class="CreateCatDiv">
                        <label style="display:none" id="FieldsError">Please fill all fields</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="submitBomBtn saveBtn " data-dismiss="modal" id="btnDismissModal">Cancel</button>
                    <button type="submit" class="submitBomBtn publishBtn " id="btnAssmAdd">Submit</button>
                </div>
            </div>
        </div>
    </div>
}

<script>

    var finalCount = @count;

    if (finalCount == 1) {
        AddMoreRows();
    }

    function AutoComp() {
        $(".autoCompEdit").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: 'POST',
                    url: "/AssemblyMaster/GetAssemblyDetailsSearch",
                    data: { prefix: request.term},
                    dataType: 'json',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name + (item.CatalogueNo ? '( ' + item.CatalogueNo + ' )' : ''), value: item.Id, Type: item.MasterType }
                        }))
                    },
                    error: function (response) {
                    },
                    failure: function (response) {
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                var countId = $(this).attr('data-val');
                var subId = i.item.value;
                $("#SubAssmId_" + countId).val(subId);
                var type = i.item.Type;
                $("#type_" + countId).val(type);
                return false;
            },
            change: function (e, i) {
                if (!i.item) {
                    $(this).val("");
                    $(this).focus();
                    var num= $(this).attr('data-val');
                    $("#SubAssmId_" + num).val("");
                    $("#type_" + num).val("");
                    //ClearRow(dataAttrib);
                }
            },
            create: function () {
                $(this).data("ui-autocomplete")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "<span class='float-right'><img src='../Assets/images/" + item.Type + ".png' width='20px'></span></div>")
                        .appendTo(ul);
                };
            },
            minLength: 1
        });
    };

    $("#EditAssmSaveButton").click(function () {
            var form = $("#EditAssemblyForm").serialize();
            $.ajax({
                type: 'POST',
                url: "/AssemblyMaster/AssmProductsEditSave",
                data: form,
                dataType: 'html',
                success: function (data) {
                    if (data != false) {
                        $("#subAssmDiv").html(data);
                        editSuccess();
                    }
                    else {
                        editFailure();
                    }

                }
            });
        });

    function AddMoreRows() {
            $.each(new Array(3), function (tempCount) {
                tempCount = finalCount;
                $('#EditSubAssemlyTable tr:last')
                    .after('<tr> <td> <input type="text" name="SubAssmName" placeholder="Product Name" id="SubAssmName_' + tempCount + '" onclick="AutoComp();" ' +
                        'value ="" class= "autoComp autoCompEdit whiteBgInput" data-val="' + tempCount + '" /> <input type="hidden" name="SubAssmIds" id="SubAssmId_' + tempCount + '"/>' +
                    '<input type="hidden" name="ItemType" id="type_' + tempCount + '"/></td > <td>' +
                    '<input type="text" name="SubAssmQty" placeholder="Quantity" id="Quantity_' + tempCount + '" value="" class="whiteBgInput"/>' +
                    '<td class="closesTD c-pointer text-center">' + '<img src="/Assets/images/collapseClose.svg" width="12px" id="Rem_' + tempCount + '" onclick="ClearRow(' + tempCount + ')"> </td></td> </tr>');
                finalCount++;
            });
    };

    function ClearRow(num) {
        $("#SubAssmName_" + num).val("");
        $("#SubAssmName_" + num).removeAttr('readonly');
        $("#SubAssmName_" + num).removeAttr('disabled');
        $("#SubAssmName_" + num).addClass("whiteBgInput");
        $("#Quantity_" + num).val("");
        $("#Quantity_" + num).addClass("whiteBgInput");
        $("#SubAssmId_" + num).val("");
        $("#type_" + num).val("");
    }

    $("#image").change(function () {
        var isValid = ValidateFile(this);
        if (isValid) {
            var filename = this.files[0].name;
            $("#IsRemove").val(false);
            document.getElementById("drawingfi").value = filename;
        }
    });

    function removeFile(AssId)
    {
        $("#IsRemove").val(true);
        document.getElementById("drawingfi").value = "";
    }

    $("#ddlUTSEdit").autocomplete({
        source: function (request, response) {
            $.ajax({
                type: 'POST',
                url: "/Master/SearchMasterByPrefix",
                data: { type: "6", prefix: request.term },
                dataType: 'json',
                success: function (data) {
                    ////
                    response($.map(data, function (item) {
                        return { label: item.Name, value: item.Name }
                    }))
                },
                error: function (response) {
                },
                failure: function (response) {
                }
            });
        },
        select: function (e, i) {
            debugger;
            $(this).val(i.item.label);
            $("#ddlUTSEdit").val(i.item.label);
        },
        change: function (e, i) {
            if (i.item == null) {
                //$(this).val("");
                $(this).focus();
                //$("#txtName").val("");
            }
        },
        minLength: 2
    });

</script>
