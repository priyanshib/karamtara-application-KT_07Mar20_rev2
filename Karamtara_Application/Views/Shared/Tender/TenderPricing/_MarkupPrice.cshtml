@using System.Data
@model DataTable
@using System.Dynamic;
@{
    dynamic dynamic = new ExpandoObject();
    List<dynamic> list = (List<dynamic>)TempData["TenderLineValues"];
    int TenderType = Convert.ToInt32(TempData["TenderType"]);
    decimal value = 0;
}

<div class="BomRefDtls MarkupPricingModal">
    <div class="closeMenu">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="col-sm-12 row BomRefHeader m-0">
        ADD MARK UPS
    </div>
    
    <div class="col-sm-12 row BomRefItem m-0">
        <div class="col-sm-8 ">
            <div class="row addMarkInput">
                <div class="col-sm-4">
                    @{
                        if (list != null && list.Any())
                        {
                            dynamic = new ExpandoObject();
                            dynamic = list.Where(x => x.Description == "InterestRate").FirstOrDefault();
                            if (dynamic != null)
                            {
                                value = dynamic.Value;
                            }
                            else
                            {
                                value = 0;
                            }
                        }
                    }

                    Rate of Interest
                    <p class="d-flex align-items-center mt-1"><input type="text" id="intRate" value="@value" onchange="setTotal()" />%</p>
                </div>
                @*<div class="col-sm-4">
                        Credit Period
                        <p class="d-flex align-items-center mt-1"><input type="text" />Days</p>
                    </div>
                    <div class="col-sm-4">
                        Advance Received
                        <p class="d-flex align-items-center mt-1"><input type="text" />Days</p>
                    </div>*@
            </div>

        </div>
        <div class="col-sm-4 text-right">
            <button type="button" class="submitEnq revisionBtn" onclick="closeModal()">Cancel</button>
            <button type="button" id="btnSubmitMarkup" class="submitEnq publishBtn">Submit</button>
        </div>
    </div>


    <div class="tableBlock TenderDtlModelTable ">
        <table class="table m-0 markupListItems tableLayout">
            @{
                string colName = "";
                <tr>
                    <th class="markSrNo" style="width:50px">S.NO.</th>
                    @foreach (DataColumn col in Model.Columns)
                    {
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            colName = col.ColumnName.Substring(0, col.ColumnName.LastIndexOf("_"));
                            <th class="MarkUpPrc" style="width:200px">@colName %</th>
                        }
                        else if (col.ColumnName != "MarkupId")
                        {
                            <th class="MatkUp">@col.ColumnName</th>
                        }
                    }

                </tr>
                int i = 1;

                string lineId = "";
                foreach (DataRow row in Model.Rows)
                {
                    <tr>
                        <td class="TendSrNo">@i </td>
                        @foreach (DataColumn col in Model.Columns)
                        {
                            if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                            {

                                lineId = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                                <td class="MarkUpPrc">@Html.TextBox(col.ColumnName, @row[col.ColumnName]=="0.000"?"": @row[col.ColumnName], new { @id = col.ColumnName + "_" + +(i - 1), @type = "number", @onchange = "setMarkupPricing(this)", @markupId = row["MarkupId"], @lineId = lineId, @class = "whiteBgInput" }) </td>
                            }
                            else if (col.ColumnName != "MarkupId")
                            {
                                <td class="MatkUp">
                                    <div class="col-sm-12 p-0">
                                        <div class="row">

                                            @{
                                                <div class="col-sm-7 d-flex align-items-center">
                                                    @row[col.ColumnName]
                                                </div>

                                                if (row["Description"].ToString().ToUpper() == "FINANCE: MFG WIP")
                                                {
                                                    if (list != null && list.Any())
                                                    {
                                                        dynamic = new ExpandoObject();
                                                        dynamic = list.Where(x => x.Description == "FinMfgDays").FirstOrDefault();
                                                        if (dynamic != null)
                                                        {
                                                            value = dynamic.Value;
                                                        }
                                                        else
                                                        {
                                                            value = 0;
                                                        }
                                                    }
                                                    <div class="col-sm-5 d-flex align-items-center">
                                                        @*<div class="row">
                                                            <div class="col-sm-8 pr-3">*@
                                                        @Html.TextBox("finMfgDays", value, new { @id = "finMfgDays", @type = "number", @onchange = "setTotal()", @class = "whiteBgInput" })days
                                                        @*</div>
                                                                <div class="col-sm-4 d-flex align-items-center p-0 justify-content-center">

                                                                </div>
                                                            </div>*@

                                                    </div>


                                                }
                                                else if (row["Description"].ToString().ToUpper() == "FINANCE: SALES CR.")
                                                {

                                                    if (list != null && list.Any())
                                                    {
                                                        dynamic = new ExpandoObject();
                                                        dynamic = list.Where(x => x.Description == "FinSalesDays").FirstOrDefault();
                                                        if (dynamic != null)
                                                        {
                                                            value = dynamic.Value;
                                                        }
                                                        else
                                                        {
                                                            value = 0;
                                                        }
                                                    }

                                                    <div class="col-sm-5 d-flex align-items-center">
                                                        @*<div class="row">
                                                            <div class="col-sm-8 pr-3">*@
                                                        @Html.TextBox("finSalesDays", value, new { @id = "finSalesDays", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" })days
                                                        @*</div>
                                                                <div class="col-sm-4 d-flex align-items-center p-0 justify-content-center">

                                                                </div>
                                                            </div>*@
                                                    </div>

                                                }
                                                else if (row["Description"].ToString().ToUpper() == "INTEREST SAVING ON ADVANCE")
                                                {
                                                    <div class="col-sm-5  p-0">
                                                        <div class="row col-sm-12 m-0 d-flex align-items-center">
                                                            @*<div class="col-sm-9 pl-0 pr-4">*@
                                                            @{
                                                                if (list != null && list.Any())
                                                                {
                                                                    dynamic = new ExpandoObject();
                                                                    dynamic = list.Where(x => x.Description == "IntSavingAdvDays").FirstOrDefault();
                                                                    if (dynamic != null)
                                                                    {
                                                                        value = dynamic.Value;
                                                                    }
                                                                    else
                                                                    {
                                                                        value = 0;
                                                                    }
                                                                }
                                                            }
                                                            @Html.TextBox("intSavingAdv", value, new { @id = "intSavingAdvDays", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" })days
                                                            @*</div>
                                                                <div class="col-sm-3 d-flex align-items-center p-0 justify-content-center">

                                                                </div>*@
                                                        </div>
                                                        <div class="row col-sm-12 m-0 d-flex align-items-center">
                                                            @*<div class="col-sm-8 p-0 pr-2">*@
                                                            @{
                                                                if (list != null && list.Any())
                                                                {
                                                                    dynamic = new ExpandoObject();
                                                                    dynamic = list.Where(x => x.Description == "IntSavingAdvMnths").FirstOrDefault();
                                                                    if (dynamic != null)
                                                                    {
                                                                        value = dynamic.Value;
                                                                    }
                                                                    else
                                                                    {
                                                                        value = 0;
                                                                    }
                                                                }
                                                            }

                                                            @Html.TextBox("intSavingAdv", value, new { @id = "intSavingAdvMnths", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" }) months
                                                            @*</div>
                                                                <div class="col-sm-4 d-flex align-items-center p-0 pr-1">

                                                                </div>*@
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                </td>

                            }
                        }
                    </tr>
                    i = i + 1;
                }
            }

            <tr class="subTotalTR">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="SubMatkUp">SUB TOTAL</td>
                @{
                    string line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="MarkUpPrc" lineid="@line" style="width:200px"></td>
                        }
                    }
                }
                @*<td class="itemPerc">80.40</td>
                    <td class="itemPerc">80.40</td>
                    <td class="itemPerc">80.40</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingCharge">
                <td class="markSrNo" style="color:transparent">S.NO.</td>
                <td class="MatkUp">Testing</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Testing").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="markUpPrc" lineid="@line" style="width:200px">@value</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingChargeOverride">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">Override Testing Charges</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TestingOverride").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td style="width:100px" class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setTotal()", @class = "exclude whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingOverrideRemarks">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">Remarks</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            string remarks = "";
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TestingOverrideRemarks").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    remarks = dynamic.Remarks;
                                }
                                else
                                {
                                    remarks = "";
                                }
                            }
                            <td style="width:200px" class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, remarks, new { @lineId = line, @onchange = "setTotal()", @class = "exclude whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>

            <tr id="travelCharge">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">
                    Travel, Lodging & Boarding

                </td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TravelLB").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td style="width:200px" class="markUpPrc" lineid="@line">
                                <div class="d-flex align-items-center justify-content-center">
                                    @Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setTotal()", @class = "TravelLB exclude", @readonly = true })
                                    <img src="~/Assets/images/plusPubIcon.png" onclick="OpenTravelLBModal(this, @TenderType)" lineid="@line" />
                                </div> 
                                
                                @{
                                    value = 0;
                                    if (list != null && list.Any())
                                    {
                                        dynamic = new ExpandoObject();
                                        dynamic = list.Where(x => x.Description == "NoOfPersons" && x.LineId == Convert.ToInt32(line)).FirstOrDefault();
                                        value = dynamic == null ? 0 : dynamic.Value;
                                    }
                                }
                                <input type="hidden" id="NoOfPersons" name="NoOfPersons" lineid="@line" value="@value" class="exclude" />
                                @{
                                    value = 0;
                                    if (list != null && list.Any())
                                    {
                                        dynamic = new ExpandoObject();
                                        dynamic = list.Where(x => x.Description == "NoOfDays" && x.LineId == Convert.ToInt32(line)).FirstOrDefault();
                                        value = dynamic == null ? 0 : dynamic.Value;
                                    }
                                }
                                <input type="hidden" id="NoOfDays" name="NoOfDays" lineid="@line" value="@value" class="exclude" />
                                @{
                                    value = 0;
                                    if (list != null && list.Any())
                                    {
                                        dynamic = new ExpandoObject();
                                        dynamic = list.Where(x => x.Description == "Fare" && x.LineId == Convert.ToInt32(line)).FirstOrDefault();
                                        value = dynamic == null ? 0 : dynamic.Value;
                                    }
                                }
                                <input type="hidden" id="Fare" name="Fare" lineid="@line" value="@value" class="exclude" />
                                @{
                                    value = 0;
                                    if (list != null && list.Any())
                                    {
                                        dynamic = new ExpandoObject();
                                        dynamic = list.Where(x => x.Description == "Lodging" && x.LineId == Convert.ToInt32(line)).FirstOrDefault();
                                        value = dynamic == null ? 0 : dynamic.Value;
                                    }
                                }
                                <input type="hidden" id="Lodging" name="Lodging" lineid="@line" value="@value" class="exclude" />
                            </td>
                        }
                    }
                }
                @*<td class="itemPerc"></td>*@
            </tr>
            <tr id="devCharge">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">Developement</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Developement").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td style="width:200px" class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setTotal()", @class = "exclude whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">10002</td>*@
            </tr>
            <tr class="otherTotalBlock">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">Other Total (A)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="markUpPrc" lineid="@line" style="width:200px">11111</td>
                        }
                    }
                }
            </tr>
            <tr class="lineUnitCostBlock">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">Total Cost (RM) (B)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "LineUnitCost").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="itemPerc" lineid="@line">@value</td>
                        }
                    }
                }
            </tr>
            @*<td class="itemPerc" lineid="3">25724</td>*@
            <tr class="unitCostBlock">
                <td class="TendSrNo"></td>
                <td class="MatkUp">Testing Cost as Percentage of RM Cost (C)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="markUpPrc" lineid="@line" style="width:200px">11111</td>
                        }
                    }
                }
                @*<td class="itemPerc">0.1471</td>*@
            </tr>

        @*</table>
    </div>
    <div class="ModelFooter tableBlock makUpFooter ">
        <table class="table m-0 tableLayout">*@
            <tr class="finalTotal makUpFooter">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="SubMatkUp">SUB TOTAL</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="MarkUpPrc" lineid="@line" style="width:200px">80.40</td>
                        }
                    }
                }
            </tr>
            <tr class="makUpFooter">
                <td class="markSrNo" style="color:transparent;width:50px">S.NO.</td>
                <td class="MatkUp">MARGIN</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Margin").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="itemPerc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setMargin(this)", @class = "whiteBgInput p-1 marginInput exclude" })</td>
                        }
                    }
                }
            </tr>
        </table>
    </div>
</div>

<script>
    var markupArray = [], marginArray = [], finalTotalArray = [], percToUnitCostArray = [], developement = [], travelLB = [], testing = [], testingRemarks = [], travelLBValues = [];

    

    //$(document).ready(function () {
    $(".MarkupPricingModal").find("td").filter(function () {
        return $.trim($(this).text().toLowerCase()) == 'pbg';
    }).nextAll().find("input").attr('readonly', 'readonly').removeClass("whiteBgInput");

    setTotal();

    if ($("#isPageEditable").val() != "True" && $("#isPageEditable").val() != "true") {
        $("input").attr('readonly', true);
        $(".ModelFooter").find(".whiteBgInput").css("font-weight", "bold");
        $(".ModelFooter").find(".whiteBgInput").css("color", "#fff");
        $("input").removeClass("whiteBgInput");
        $("input").removeClass("p-1");
        $("button").not(".close").hide();
        $("input[type='button']").hide();
    }
    //});

    function setMarkupPricing(element) {
        //
        var markupId = $(element).attr("markupid");
        var lineId = $(element).attr("lineid");
        var value = $(element).val();
        var index = markupArray.findIndex(x => x.lineId === lineId && x.markupId == markupId);
        if (index != -1)
            markupArray.splice(index, 1);
        markupArray.push({ lineId: lineId, markupId: markupId, value: value });
        setTotal();
    }

    function setMargin(element) {

        var lineId = $(element).attr("lineid");
        var value = $(element).val();
        //if (Number(value) >= 100) {
        //    $(element).val(0);
        //    var x = document.getElementById("snackbar");
        //    x.innerHTML = "Margin should be less than 100";
        //    x.className = "snackBarshow";
        //    setTimeout(function () { x.className = x.className.replace("snackBarshow", ""); }, 3000);
        //    return false;
        //}

        var index = markupArray.findIndex(x => x.lineId === lineId);
        if (index != -1)
            markupArray.splice(index, 1);
        marginArray.push({ lineId: lineId, margin: value });
    }

    $("#btnSubmitMarkup").click(function () {
        var flag = false;
        var elements = $(".marginInput");
        //
        $.each(elements, function (index, ele) {
            var value = $(ele).val();
            if (Number(value) >= 100) {
                $(ele).val(0);
                var x = document.getElementById("snackbar");
                x.innerHTML = "Margin should be less than 100";
                x.className = "snackBarshow";
                setTimeout(function () { x.className = x.className.replace("snackBarshow", ""); }, 3000);
                flag = true;
                return false;
            }
        });
        debugger;
        var readOnlyMarkups = $("input[markupid='1'],input[markupid='8'],input[markupid='9']");
        $.each(readOnlyMarkups, function (index, element) {
            var markupId = $(element).attr("markupid");
            var lineId = $(element).attr("lineid");
            var value = $(element).val();
            var index = markupArray.findIndex(x => x.lineId === lineId && x.markupId == markupId);
            if (index != -1)
                markupArray.splice(index, 1);
            markupArray.push({ lineId: lineId, markupId: markupId, value: value });
        });


        if (flag)
            return false;

        var obj = {};
        var array = JSON.stringify(markupArray);
        obj.values = array;
        obj.marginValues = JSON.stringify(marginArray);
        obj.bomId = $("#bomId").val();
        obj.revId = $("#revisionId").val();
        obj.tndId = $("#tndId").val();
        obj.tndRevNo = $("#tndRevId").val();
        obj.developement = JSON.stringify(developement);
        obj.finalTotalArray = JSON.stringify(finalTotalArray);
        obj.percToUnitCostArray = JSON.stringify(percToUnitCostArray);
        obj.testingRemarks = JSON.stringify(testingRemarks);
        obj.travelLB = JSON.stringify(travelLB);
        obj.testing = JSON.stringify(testing);
        obj.interestRate = Number($("#intRate").val());
        obj.finSalesDays = Number($("#finSalesDays").val());
        obj.finMfgDays = Number($("#finMfgDays").val());
        obj.intSavingAdvDays = Number($("#intSavingAdvDays").val());
        obj.intSavingAdvMnths = Number($("#intSavingAdvMnths").val());
        obj.travelLBValues = JSON.stringify(travelLBValues);
        $.ajax({
            type: "post",
            url: '/TenderPricing/SaveMarkupPricing',
            data: obj,
            async: false,
            success: function (data) {
                if (data) {
                    $(".modal").modal('hide');
                    //successModal();
                    SubmitFreight();
                    window.location.reload();
                }
                else {
                    failureModal('creation');
                }
            },
            error: function (courses) {
                // failureModal();
            }
        });
    })

    function setTotal() {

        var sum = 0, percToUnitCost = 0, subTotalSum = 0, finalTotal = 0, lineUnitCost = 0, remark = "", noOfPersons, noOfDays, fare, lodging;
        unitCost = $("#tndUnitCost").val();
        percToUnitCostArray = [];
        finalTotalArray = [];
        developement = [];
        travelLB = [];
        testing = [];
        testingRemarks = [];
        travelLBValues = [];

        $("#finSalesDays").closest("tr").find("input").not("#finSalesDays").attr("readonly", "readonly").removeClass("whiteBgInput");
        $("#finMfgDays").closest("tr").find("input").not("#finMfgDays").attr("readonly", "readonly").removeClass("whiteBgInput");
        $("#intSavingAdvDays").closest("tr").find("input").not("#intSavingAdvDays,#intSavingAdvMnths").attr("readonly", "readonly").removeClass("whiteBgInput");

        var value = Number((((Number($("#intRate").val()) / 100) / 360) * Number($("#finSalesDays").val())) * 100);
        $("#finSalesDays").closest("tr").find("input").not("#finSalesDays").val(value.toFixed(3));

        value = Number((((Number($("#intRate").val()) / 100) / 360) * Number($("#finMfgDays").val())) * 100);
        $("#finMfgDays").closest("tr").find("input").not("#finMfgDays").val(value.toFixed(3));

        value = Number((((Number($("#intSavingAdvDays").val()) * (Number($("#intRate").val()) / 100)) / 12) * Number($("#intSavingAdvMnths").val())) * 100);
        $("#intSavingAdvDays").closest("tr").find("input").not("#intSavingAdvDays,#intSavingAdvMnths").val(value.toFixed(3));

        var elements = $(".subTotalTR").find("td[lineid]");
        $.each(elements, function (index, ele) {
            var lineId = $(ele).attr("lineid");
            var lineElements = $(".markupListItems").find("input[lineid='" + lineId + "']").not(".exclude");
            $(lineElements).each(function () {
                //var match = isDecimal.exec($(this).val());
                debugger;
                var value = $(this).val();
                if (!isNaN(value) && value != "") {
                    subTotalSum += parseFloat(parseFloat(value).toFixed(2));
                }
            });
            $(ele).text(subTotalSum.toFixed(3));
            sum = 0;

            num = $("#testingChargeOverride").find("td[lineid='" + lineId + "'] input").val();

            remark = $("#testingOverrideRemarks").find("td[lineid='" + lineId + "'] input").val();

            if (!isNaN(num) && num != "") {
                if (num > 0) {
                    sum += parseFloat(parseFloat(num).toFixed(2));
                    testing.push({ lineId: lineId, value: num });
                    testingRemarks.push({ lineId: lineId, value: remark });
                }
                else {
                    num = $("#testingCharge").find("td[lineid='" + lineId + "']").text();
                    if (!isNaN(num) && num != "")
                        sum += parseFloat(parseFloat(num).toFixed(2));
                }
            }
            else {
                num = $("#testingCharge").find("td[lineid='" + lineId + "']").text();
                if (!isNaN(num) && num != "")
                    sum += parseFloat(parseFloat(num).toFixed(2));
            }

            num = $("#devCharge").find("td[lineid='" + lineId + "'] input").val();

            if (!isNaN(num) && num != "")
                sum += parseFloat(parseFloat(num).toFixed(2));

            developement.push({ lineId: lineId, value: num });

            num = $("#travelCharge").find("td[lineid='" + lineId + "'] input").val();
            if (!isNaN(num) && num != "")
                sum += parseFloat(parseFloat(num).toFixed(2));

            travelLB.push({ lineId: lineId, value: num });

            $(".otherTotalBlock").find("td[lineid='" + lineId + "']").text(sum.toFixed(3));

            lineUnitCost = $(".lineUnitCostBlock").find("td[lineid='" + lineId + "']").text();

            if (lineUnitCost != 0 && lineUnitCost != "")
                percToUnitCost = (sum / lineUnitCost) * 100;

            percToUnitCostArray.push({ lineId: lineId, value: percToUnitCost });

            $(".unitCostBlock").find("td[lineid='" + lineId + "']").text(percToUnitCost.toFixed(4));

            finalTotal = 1 + (subTotalSum + percToUnitCost) / 100;

            finalTotalArray.push({ lineId: lineId, value: finalTotal });

            $(".finalTotal").find("td[lineid='" + lineId + "']").text(finalTotal.toFixed(4));

            noOfPersons = $("#NoOfPersons[lineid='" + lineId + "']").val();
            noOfDays = $("#NoOfDays[lineid='" + lineId + "']").val();
            fare = $("#Fare[lineid='" + lineId + "']").val();
            lodging = $("#Lodging[lineid='" + lineId + "']").val();
            travelLBValues.push({ noOfPersons: Number(noOfPersons), noOfDays: Number(noOfDays), fare: Number(fare), lodging: Number(lodging), lineId: lineId });

            sum = 0;
            subTotalSum = 0;
        });
    }

    function OpenTravelLBModal(element, tndType) {
        var noOfPersons, noOfDays, fare, lodging, lineId, Fare;

        $("#testmasterDtls").css('display', "block");
        noOfPersons = $(element).closest("td").find("#NoOfPersons").val();
        noOfDays = $(element).closest("td").find("#NoOfDays").val();
        fare = $(element).closest("td").find("#Fare").val();
        lodging = $(element).closest("td").find("#Lodging").val();
        lineId = $(element).attr("lineid");

        if (tndType == 1)
            Fare = '<div class="col-sm-3 d-flex align-items-center">Fare(Usd) :</div>';
        else if (tndType==2)
            Fare = '<div class="col-sm-3 d-flex align-items-center">Fare(Euro) :</div>';
        else
            Fare = '<div class="col-sm-3 d-flex align-items-center">Fare :</div>';


        var html = '< div id = "myModal" class="modal fade" role = "dialog" >' +
            ' <div class="modal-dialog modal-dialog-centered ">' +
            '<div class="modal-content">' +
            ' <div class="modal-body">' +
            '<div class="BomRefDtls">' +
            '<div class="col-sm-12 row BomRefHeader m-0">' +
            '<div class="col-sm-8 d-flex align-items-center">' +
            'Add Travel, Loadging & Boarding' +
            '</div>' +
            '<div class="col-sm-4 text-right">' +
            '<button type="button" class="submitEnq revisionBtn" onclick="CloseTravelLBModal()" data-dismiss="modal">Cancel</button>' +
            '<button type="button" class="submitEnq publishBtn" onclick="SetTravelLB(' + lineId + ')" data-dismiss="modal">Submit</button>' +
            '</div>' +
            '</div>' +
            '<div class="col-sm-12 m-0 testMasterheader">' +
            '<div class="row">' +
            '<div class="col-sm-3 d-flex align-items-center">No. of Persons:</div>' +
            '<div class="col-sm-8"><input type="number" class="whiteBgInput" id="txtNoOfPersons" value="' + noOfPersons + '"></div>' +
            '<div class="col-sm-3 d-flex align-items-center">No. of Days:</div>' +
            '<div class="col-sm-8"><input type="number" class="whiteBgInput" id="txtNoOfDays" value="' + noOfDays + '"></div>' +
            Fare +
            '<div class="col-sm-8"><input type="number" class="whiteBgInput" id="txtFare" value="' + fare + '"></div>' +
            '<div class="col-sm-3 d-flex align-items-center">Lodging :</div>' +
            '<div class="col-sm-8"><input type="number" class="whiteBgInput" id="txtLodging" value="' + lodging + '"></div>' +
            '</div>' +
            '</div></div></div></div></div>';

        $("#testmasterDtls").html(html);
        $("#testmasterDtls").modal('show');
    }

    function SetTravelLB(lineId) {
        var noOfPersons, noOfDays, fare, lodging, travelLB;

        noOfPersons = Number($("#txtNoOfPersons").val());
        noOfDays = Number($("#txtNoOfDays").val());
        fare = Number($("#txtFare").val());
        lodging = Number($("#txtLodging").val());
        travelLB = ((noOfPersons * noOfDays * lodging) + (noOfPersons * fare));
        $(".TravelLB[lineid='" + lineId + "']").val(travelLB.toFixed(0));

        $("#NoOfPersons[lineid='" + lineId + "']").val(noOfPersons);
        $("#NoOfDays[lineid='" + lineId + "']").val(noOfDays);
        $("#Fare[lineid='" + lineId + "']").val(fare);
        $("#Lodging[lineid='" + lineId + "']").val(lodging);

        setTotal();
        $("#testmasterDtls").css('display', "none");
    }

    function CloseTravelLBModal() {
        $("#testmasterDtls").css('display', "none");
    }
</script>