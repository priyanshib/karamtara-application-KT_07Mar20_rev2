@using System.Data
@using System.Collections.Generic;
@using System.Web.Mvc;
@model DataSet
@{
    Layout = null;
    int i = 0;
    int k = 0;
    int lineId = 0;
    var TruckMetricTypes = TempData["TruckMetricTypes"];
}

<div class="BomRefDtls main-container">
    @*<div class="closeMenu">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>*@
    <div class="col-sm-12 row BomRefHeader m-0">
        FREIGHT CHARGES
    </div>
    <div class="col-sm-12 row BomRefItem m-0 lineHeadingContainer pb-0 pt-0">
        <div class="col-sm-8 ">
            <div class="row addMarkInput">
                @{
                    if (Model != null)
                    {
                        foreach (DataTable table in Model.Tables)
                        {
                            foreach (DataRow row in table.Rows)
                            {
                                if (i == 0)
                                {
                                    lineId = Convert.ToInt32(row["LineId"]);
                                }
                                <div class="col-sm-2 pb-2 pt-2 pl-0 pr-0 text-center c-pointer activeLine lineList" id="activeLine" totalwt="@row["TotalNtWt"]" lineid="@row["LineId"]"
                                     truckid="@row["MetricTruckId"]" linetruckid="@row["LineTruckId"]" loadingfactor="@row["LoadingFactor"]" contingency="@row["Contingency"]" onclick="SetActiveLine(this)">
                                    @row["Name"]
                                </div>
                                i = i + 1;
                            }
                            i = 0;
                            break;
                        }
                    }
                }
            </div>
        </div>
        <div class="col-sm-4 text-right">
            <button type="button" class="submitEnq closeModal revisionBtn" onclick="closeModal()">Cancel</button>
            <button type="button" id="btnSubmitFreight" class="submitEnq publishBtn">Submit</button>
        </div>
    </div>
    @foreach (DataTable table in Model.Tables)
    {
        if (k > 0)
        {
            <div class="lineTabs" style="display:none">
                <div class="tableBlock TenderDtlModelTable FrightTenderTable">
                    <table class="table m-0 ">
                        <tr>
                            <th class="markSrNo">S.NO.</th>
                            <th class="frghtDes">Description</th>
                            <th class="frghtData" style="width: 112px;">Data</th>
                        </tr>
                        <tr class="font-weight-bold">
                            <td class="markSrNo">1</td>
                            <td class="frghtDes">Total Weight (MT)</td>
                            <td class="frghtData totalWt"></td>
                            @*437.34*@
                        </tr>
                        <tr>
                            <td class="markSrNo">2</td>
                            <td class="frghtDes">Total Weight of Material(KG)</td>
                            <td class="frghtData totalMaterialWt"></td>
                        </tr>
                        <tr>
                            <td class="markSrNo">3</td>
                            <td class="frghtDes">Packing material weight as Percentage</td>
                            <td class="frghtData">@Html.TextBox("loadingFactor", "1.15", new { @onchange = "ChangeLoadingFactor(this)", @id = "loadingFactor", @class = "whiteBgInput" })</td>
                        </tr>
                        <tr class="frghtLoctnTR">
                            <td class="markSrNo"></td>
                            <td class="frghtDes">
                                @Html.DropDownList("MetricTruckType", new SelectList((System.Collections.IEnumerable)TruckMetricTypes, "Value", "Text"), "Select Truck Type", new { @class = "browser-default custom-select", @onchange = "SetLineTruck(this)" })
                            </td>
                            <td class="frghtData">INR</td>
                        </tr>
                        @{
                            i = 1;
                            int count = 0;
                            if (Model != null)
                            {
                                count = table.Rows.Count;
                                foreach (DataRow row in table.Rows)
                                {
                                    <tr destid="@row["Id"]" lineid="@row["LineId"]" onclick="PushDetails(this)">
                                        <td class="markSrNo"></td>
                                        <td class="frghtDes">@Html.TextBox("frghtDes", @row["Destinations"], new { @onchange = "ChangeDetails(this)", @inputType = "Destination" })</td>
                                        <td class="frghtData destFrght">@Html.TextBox("frghtData", @row["Charges"], new { @onchange = "ChangeDetails(this)", @inputType = "Charge", @class = "whiteBgInput" })</td>
                                    </tr>
                                    i = i + 1;
                                }
                            }

                            for (int j = 0; j < 1 - count; j++)
                            {
                                <tr destid="" lineid="" onclick="PushDetails(this)">
                                    <td class="markSrNo"></td>
                                    <td class="frghtDes">@Html.TextBox("frghtDes", "", new { @onchange = "ChangeDetails(this)", @inputType = "Destination" })</td>
                                    <td class="frghtData destFrght">@Html.TextBox("frghtData", "", new { @onchange = "ChangeDetails(this)", @inputType = "Charge", @class = "whiteBgInput" }) </td>
                                </tr>
                            }
                        }
                        <tr>
                            <td class="markSrNo"></td>
                            <td class="frghtDes addMoreLoctn"><span>Add more locations </span><img src="../../Assets/images/addMore.png" onclick="AddRows(this)"></td>
                            <td class=""></td>
                        </tr>
                        <tr class="avgFrghtTR">
                            <td class="markSrNo"></td>
                            <td class="frghtDes">Average Frt</td>
                            <td class="avgFrghtData"></td>
                        </tr>
                        <tr>
                            <td class="markSrNo"></td>
                            <td class="frghtDes">Max freight</td>
                            <td class="maxFrghtData"></td>
                        </tr>
                        <tr>
                            <td class="markSrNo"></td>
                            <td class="frghtDes">Freight Considered</td>
                            <td class="frghtConsidered"></td>
                        </tr>
                        <tr>
                            <td class="markSrNo"></td>
                            <td class="frghtDes">Rate per truck</td>
                            <td class="ratePerTruck"></td>
                        </tr>
                        <tr>
                            <td class="markSrNo"></td>
                            <td class="frghtDes">No. of truck</td>
                            <td class="truckCount"></td>
                        </tr>
                    </table>
                </div>
                <div class="tableBlock frghtChargBlk">
                    <table class="table m-0">

                        <tr class="bgBlue">
                            <td class="markSrNo" style="color:transparent">S.NO.</td>
                            <td class="frghtDes">SUB TOTAL FREIGHT</td>
                            <td class="subTotFrght"></td>
                        </tr>
                        <tr class="bgBlue">
                            <td class="markSrNo"></td>
                            <td class="frghtDes">CONTIGENCY ON FREIGHT (%)</td>
                            <td class="contFrght">@Html.TextBox("contFrght", "", new { @onchange = "ChangeContingency(this)", @class = "whiteBgInput p-1" })</td>
                        </tr>
                        <tr class="bgBlue">
                            <td class="markSrNo"></td>
                            <td class="frghtDes">TOTAL FREIGHT</td>
                            <td class="totalFrght"></td>
                        </tr>
                    </table>
                </div>
            </div>
        }
        k = k + 1;
    }
</div>
<script>
    var freightDetails = [], activeLineId = @lineId, selectedTruckMetrics = [], activeLineTruckId = 0, lineContingencyDt = [], activeLineElement, activeLineTab;

    //$(document).ready(function () {
    var elements = $("tr[destid='']");
    $.each(elements, function (index, ele) {
        $(ele).attr("destid", RandomId());
    });
    var lineItems = $(".lineHeadingContainer").find("div[truckid]");
    $.each(lineItems, function (index, ele) {
        var lineId = $(ele).attr("lineid");
        activeLineElement = $(".lineHeadingContainer").find("div[lineid='" + lineId + "']");

        SetActiveLine(activeLineElement);
        SetFreight(activeLineElement);
    });
    activeLineId = @lineId;
    activeLineElement = $(".lineHeadingContainer").find("div[lineid='" + @lineId + "']");
    SetActiveLine(activeLineElement);
    SetFreight(activeLineElement);

    if ($("#isPageEditable").val() != "True" && $("#isPageEditable").val() != "true") {
        $("input").attr('readonly', true);
        $(".bgBlue").find(".whiteBgInput").css("color", "#fff");
        //$(".bgBlue").find(".whiteBgInput").css("font-weight","bold");
        $("input").removeClass("whiteBgInput");
        $("input").removeClass("p-1");
        $("button").not(".closeModal").hide();
        $("input[type='button']").hide();
        $("select").attr("disabled", true);
    }
    //});

    function AddRows(element) {
        for (var i = 0; i < 5; i++) {
            var html =
                '<tr destid="' + RandomId() + '"><td class="markSrNo"></td><td class="frghtDes">' +
                '<input id="frghtDes" name="frghtDes" inputType="Destination" onchange="ChangeDetails(this)" type="text" value=""></td>' +
                '<td class="frghtData destFrght">' +
                '<input id="frghtData" name="frghtData" inputType="Charge" class="whiteBgInput" onchange="ChangeDetails(this)" type="text" value=""></td></tr>'

            $(html).insertBefore($(element).parent().parent());
        }
    };

    function SetTotalWt(element) {
        var loadingFactor = $(activeLineTab).find("#loadingFactor").val();
        var totalMtWt = $(activeLineTab).find(".totalMaterialWt").text();
        var totalWt = (loadingFactor * totalMtWt) / 1000;
        $(activeLineTab).find(".totalWt").text(totalWt.toFixed(3));
    }

    $("#btnSubmitFreight").click(function () {
        var lineTruckDetails = [], lineContDet = [], obj = {}, lineTotFreights = [], lineLoadingFactors = [], lineUnitFreight = [];
        var array = JSON.stringify(freightDetails);
        debugger;
        var lineItems = $(".lineHeadingContainer").find("div[truckid]");
        debugger;
        $.each(lineItems, function (index, ele) {
            //
            var truckId = $(ele).attr("truckid");
            var lineId = $(ele).attr("lineid");
            var lineTruckId = $(ele).attr("linetruckid");
            //var totalFreight = $(activeLineTab).find(".totalFrght").text();
            var totalFreight = $(".main-container").find('.lineTabs').eq($(ele).index()).find(".totalFrght").text();
            var totalWtMt = $(".main-container").find('.lineTabs').eq($(ele).index()).find(".totalWt").text();
            var unitFreight = Number(totalFreight) / Number(totalWtMt);
            lineTruckDetails.push({ Id: lineTruckId, LineId: lineId, TruckId: truckId });
            lineContDet.push({ LineId: lineId, Contingency: $(ele).attr("contingency")});
            lineTotFreights.push({ lineId: lineId, value: totalFreight});
            lineLoadingFactors.push({ lineId: lineId, value: $(ele).attr("loadingfactor")});
            lineUnitFreight.push({ lineId: lineId, value: unitFreight});
        });
        obj.values = array;
        obj.bomId = $("#bomId").val();
        obj.revId = $("#revisionId").val();
        obj.tndId = $("#tndId").val();
        obj.tndRevNo = $("#tndRevId").val();
        obj.lineTruckDt = JSON.stringify(lineTruckDetails);
        obj.lineContingency = JSON.stringify(lineContDet);
        obj.lineTotFreights = JSON.stringify(lineTotFreights);
        obj.lineLoadingFactors = JSON.stringify(lineLoadingFactors);
        obj.lineUnitFreight = JSON.stringify(lineUnitFreight);

        $.ajax({
            type: "post",
            url: '/TenderPricing/SaveFreightCharges',
            data: obj,
            async: false,
            success: function (data) {
                if (data) {
                    $(".modal").modal('hide');
                    //successModal();
                    window.location.reload();
                }
                else {
                    failureModal('creation');
                }
            },
            error: function (courses) {
                // failureModal();
            }
        });
    })

    function ChangeDetails(element) {
        var obj = {};
        var destId = $(element).closest('tr').attr("destid");
        var index = freightDetails.findIndex(x => x.DestId == destId);
        if (index != -1) {
            freightDetails[index][$(element).attr("inputtype")] = $(element).val();
        }
        else {

            obj.DestId = destId;
            obj.LineId = activeLineId;
            obj[$(element).attr("inputtype")] = $(element).val();
            freightDetails.push(obj);
            obj = {};
        }
        SetFreight(activeLineElement);

    }

    function RandomId() {
        var S4 = function () {
        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        };
        return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
    }

    function SetActiveLine(element) {
        activeLineElement = element;
        activeLineTab = $(".main-container").find('.lineTabs').eq($(element).index());

        activeLineId = $(element).attr("lineid");
        activeLineTruckId = $(element).attr("truckid");
        activeLineTruckId = activeLineTruckId == 0 ? "" : activeLineTruckId;
        $('.lineTabs').css("display", "none");
        $(".activeLine").css("border-bottom", "none");
        $(element).css("border-bottom", "3px solid #4CB684");
        $(activeLineTab).find("#MetricTruckType").val(activeLineTruckId);
        $(activeLineTab).find("#contFrght").val($(element).attr("contingency"));
        $(activeLineTab).find("#loadingFactor").val($(element).attr("loadingfactor"));
        $(activeLineTab).find(".totalMaterialWt").text($(element).attr("totalwt"));
        SetTotalWt(element);
        SetFreight(element)
        $(activeLineTab).removeAttr("style");

    }

    function SetLineTruck(element) {
        var selectedTruck = $(element).val();
        selectedTruck = selectedTruck == 0 ? "" : selectedTruck;
        $(activeLineElement).attr("truckid", selectedTruck);
    }

    function ChangeContingency(element) {
        var value = $(element).val();
        value = value == 0 ? "" : value;
        $(activeLineElement).attr("contingency", value);
        SetFreight(activeLineElement);
    }

    function ChangeLoadingFactor(element) {
        //
        var value = $(element).val();
        value = value == 0 ? "" : value;
        $(activeLineElement).attr("loadingfactor", value);
        var totalMtWt = $(activeLineTab).find(".totalMaterialWt").text();
        var totalWt = (value * totalMtWt) / 1000;
        $(activeLineTab).find(".totalWt").text(totalWt.toFixed(3));
    }

    function PushDetails(element) {
        var obj = {};
        var destId = $(element).attr("destid");
        //
        var index = freightDetails.findIndex(x => x.DestId == destId);
        if (index != -1) {
            freightDetails[index].Destination = $(element).find("input[inputtype='Destination']").val();
            freightDetails[index].Charge = $(element).find("input[inputtype='Charge']").val();
        }
        else {

            obj.DestId = destId;
            obj.LineId = activeLineId;
            obj.Destination = $(element).find("input[inputtype='Destination']").val();
            obj.Charge = $(element).find("input[inputtype='Charge']").val();
            freightDetails.push(obj);
            obj = {};
        }
    }

    function SetFreight(element) {
        //
        var avgFreight, maxFreight, freightConsidered, lines = [];
        var freights = $(activeLineTab).find('.destFrght');

        $.each(freights, function (index, ele) {
            lines.push(Number($(ele).find('input').val()));
        });
        //debugger;
        var sum = 0;
        if (lines.length > 0)
         sum = lines.reduce(function (a, b) { return a + b; });
        avgFreight = sum / lines.length;
        maxFreight = Math.max.apply(Math, lines);
        freightConsidered = (avgFreight + maxFreight) / 2;

        var totalMtWt = $(activeLineTab).find(".totalWt").text();
        var truckCount = Number(totalMtWt) / 24;
        if (truckCount >= 0 && truckCount < 1) {
            truckCount = 1;
        }

        truckCount = Math.ceil(Number(truckCount).toFixed(3));

        $(activeLineTab).find(".avgFrghtData").text(avgFreight.toFixed(3));
        $(activeLineTab).find(".maxFrghtData").text(maxFreight);
        $(activeLineTab).find(".frghtConsidered").text(freightConsidered.toFixed(3));
        $(activeLineTab).find(".ratePerTruck").text((freightConsidered).toFixed(0));
        $(activeLineTab).find(".truckCount").text(truckCount.toFixed(0));
        var subTotal = freightConsidered.toFixed(0) * truckCount.toFixed(0);
        $(activeLineTab).find(".subTotFrght").text(subTotal.toFixed(0));
        var contingency = $(activeLineTab).find("#contFrght").val();
        var totalFrght = subTotal + ((contingency * subTotal)/100)

        $(activeLineTab).find(".totalFrght").text(totalFrght.toFixed(3));
    }
</script>