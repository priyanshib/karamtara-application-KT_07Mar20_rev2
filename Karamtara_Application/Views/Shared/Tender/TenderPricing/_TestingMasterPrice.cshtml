@model Karamtara_Application.Models.TestMasterModel

@{
    int count = 1;
}

<div class="BomRefDtls">
    <div class="closeMenu">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="col-sm-12 row BomRefHeader m-0">
        TEST MASTER PRICING

    </div>
    @using (Html.BeginForm("SaveTestPricing", "TenderPricing", FormMethod.Post, new { @id = "TMPrice" }))
    {
        <div class="col-sm-12 row BomRefItem m-0">
            <div class="col-sm-8 ">
                Test List
            </div>
            <div class="col-sm-4 text-right">
                @*<input type="button" class="submitEnq revisionBtn" value="Cancel" onclick="closeModal();"/>
                    <input type="button" class="submitEnq publishBtn" id="btnTndSaveForm" value="Submit" />*@
                <button type="button" class="submitEnq revisionBtn" onclick="closeModal();">Cancel</button>
                <button type="button" class="submitEnq publishBtn" id="btnTndSaveForm">Submit</button>
            </div>
        </div>
        for (int i = 0; i < Model.DummyList.Count; i++)
        {
            @Html.HiddenFor(model => Model.DummyList[i].Id)
            @Html.HiddenFor(model => Model.DummyList[i].Price)
        }
        <div class="TestMasterdetails tableBlock">
            <div class="">
                <table class="table m-0 TenderDtlModelTable">
                    <tr>
                        <th class="srNo">Sr.No</th>
                        <th class="testType">Test Name</th>
                        <th class="testDes">Description of Test</th>
                        <th class="testType">Type</th>
                        <th class="testLine">kV Line</th>
                        <th class="testUTS">UTS</th>
                        <th class="testBundle">Bundle</th>
                        <th class="testBundle">Summary</th>
                        <th class="priceItem">Price</th>
                    </tr>
                    @for (int i = 0; i < Model.TestList.Count; i++)
                    {
                        <tr>
                            <td>@count</td>
                            <td>@Model.TestList[i].TestName</td>
                            <td class="Model.TestList[i]DesTD">@Model.TestList[i].TestDescription</td>
                            <td>@Model.TestList[i].Type</td>
                            <td>@Model.TestList[i].KVLine</td>
                            <td>@Model.TestList[i].UTS</td>
                            <td>@Model.TestList[i].Bundle</td>
                            <td class="text-center">
                                @Model.TestList[i].Summary
                            </td>
                            <td>
                                @Html.TextBoxFor(x => Model.TestList[i].Price, Model.TestList[i].Price.ToString("G29"), new { @id = "tp", @class="whiteBgInput" })
                            </td>
                        </tr>
                        count++;
                        @Html.HiddenFor(x => Model.TenderId, new { @id= "testTenderId"})
                        @Html.HiddenFor(x => Model.TenderRevisionId, new { @id = "testTenderRevId"})
                        @Html.HiddenFor(x => Model.TestList[i].Id)
                        @Html.HiddenFor(x => Model.TestList[i].Price)
                    }
                </table>
            </div>
        </div>
    }
</div>

<script>
    $("#btnTndSaveForm").click(function () {

        $("#testTenderId").val($("#tndId").val());

        $("#testTenderRevId").val($("#tndRevId").val());

        var form = $("#TMPrice").serialize();

        $.ajax({
            type: "post",
            url: '/TenderPricing/SaveTestPricing',
            dataType: "json",
            data: form,
            async: false,
            success: function (data) {
                if (data) {
                    $(".modal").modal('hide');
                    //successModal();
                    SubmitMarkup();
                    //SubmitFreight();
                    window.location.reload();
                }
                else {
                    failureModal('creation');
                }
            },
            error: function (courses) {
                // failureModal();
            }
        });
    })

    if ($("#isPageEditable").val() != "True" && $("#isPageEditable").val() != "true") {
        $("input").attr('readonly', true);
        $("input").removeClass("whiteBgInput");
        $("input").removeClass("p-1");
        $("button").not(".close").hide();
        $("input[type='button']").hide();
    }

</script>
