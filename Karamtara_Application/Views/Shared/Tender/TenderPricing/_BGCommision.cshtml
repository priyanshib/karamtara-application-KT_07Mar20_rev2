@model List<Karamtara_Application.Models.Tender.TenderBGModel>
@using System.Dynamic;
@{
    dynamic dynamic = new ExpandoObject();
    dynamic.TenderNo = 0;
    dynamic.TenderRevisionNo = 0;
    dynamic.BGMonth = 0;
    dynamic.CommisionPercentage = 0;
    dynamic.BGPercentage = 0;
    dynamic.BGAmount = 0;
    dynamic.DeliveryMonth = 0;
    dynamic.ContractValue = 0;
    dynamic.PerformancePeriod = 18;
    dynamic.GracePeriod = 3;
    int tendorNo = (int)ViewData["tendorNo"];
    int tendorRevNo = (int)ViewData["tendorRevNo"];
    decimal bGMonth = 0;
    decimal commisionPercentage = 0;
    decimal bGPercentage = 0;
    decimal bGAmount = 0;
}


@using (Html.BeginForm("SaveBGData", "TenderPricing", new { IsPublished = false }, FormMethod.Post, new { @id = "BGCommisionForm", enctype = "multipart/form-data" }))
{
    <div class="BomRefDtls">
        @{
            if (Model != null && Model.Any())
            {
                dynamic = Model.FirstOrDefault();
            }
        }
        @*<input type="hidden" id="hidTndId" value="@tendorNo" />
            <input type="hidden" id="hidTndRevNo" value="@tendorRevNo" />*@
        <div class="closeMenu">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <div class="col-sm-12 row BomRefHeader m-0">
            CALCULATE BANK GUARANTEE COMMISSION
        </div>

        <div class="col-sm-12 row BomRefItem m-0">
            <div class="col-sm-8 ">
                <div class="row">
                    <div class="col-sm">
                        Delivery
                        <p class="d-flex align-items-center mt-1"><input type="number" value="@dynamic.DeliveryMonth" id="deliveryMonths" name="deliveryMonths" />Months</p>
                    </div>
                    <div class="col-sm">
                        Contract Value
                        <p class="d-flex mt-1"><input type="number" id="contractVal" value="@dynamic.ContractValue" name="contractValue" /></p>
                    </div>
                    <div class="col-sm mt-2">
                        Performance Period
                        <p class="d-flex align-items-center mt-1"><input type="number" id="performancePeriod" value="@dynamic.PerformancePeriod" name="performancePeriod" />Months</p>
                    </div>
                    <div class="col-sm mt-2">
                        Grace Period
                        <p class="d-flex mt-1"><input type="number" id="gracePeriod" value="@dynamic.GracePeriod" name="gracePeriod" /></p>
                    </div>
                </div>
            </div>
            <div class="col-sm-4 text-right">
                <button type="button" class="submitEnq revisionBtn" onclick="closeModal()">Cancel</button>
                <button type="button" class="submitEnq publishBtn" onclick="SaveBGData()">Submit</button>
            </div>
        </div>


        <div class="tableBlock TenderDtlModelTable">
            <table class="table m-0">
                <tr>
                    <th class="TendSrNo">S.NO.</th>
                    <th class="sapCode">Description</th>
                    <th class="itemNm">Month</th>
                    <th class="itemCat">% of Commission</th>
                    <th class="Uom">% of BG</th>
                    <th class="TendPrc">BG Amt Rs in Lacs</th>
                    <th class="Tendcost">BG cost %</th>
                </tr>
                <tr>
                    @{
                        if (Model != null && Model.Any())
                        {
                            dynamic = new ExpandoObject();
                            dynamic = Model.Where(x => x.BGType == 1).FirstOrDefault();
                            if (dynamic != null)
                            {
                                bGMonth = dynamic.BGMonth;
                                commisionPercentage = dynamic.CommisionPercentage;
                                bGPercentage = dynamic.BGPercentage;
                                bGAmount = dynamic.BGAmount;
                            }
                            else
                            {
                                bGMonth = 0;
                                commisionPercentage = 0;
                                bGPercentage = 0;
                                bGAmount = 0;
                            }
                        }
                        else
                        {
                            bGMonth = 0;
                            commisionPercentage = 0;
                            bGPercentage = 0;
                            bGAmount = 0;
                        }
                    }

                    <td class="TendSrNo">1</td>
                    <td class="sapCode">Advance BG</td>
                    <td class="itemNm"><input type="number" name="AdvMonth" min="0" id="advMonth" value="@bGMonth" class="whiteBgInput" /></td>
                    <td class="itemCat"><input type="number" name="AdvPercentageComm" placeholder="%" id="advcomm" value="@commisionPercentage" class="whiteBgInput" /></td>
                    <td class="Uom"><input type="number" name="AdvPercentageBG" id="advBG" value="@bGPercentage" class="whiteBgInput" /></td>@*onchange="SetAdvValues()"*@
                    <td class="TendPrc"><input type="number" name="AdvBGAmt" id="AdvBGAmt" value="@bGAmount" readonly /></td>
                    <td class="Tendcost"><input type="number" name="ADVTotalBGPercentage" id="ADVTotalBGPercentage" readonly /></td>
                </tr>
                <tr>
                    @{
                        if (Model != null && Model.Any())
                        {
                            dynamic = new ExpandoObject();
                            dynamic = Model.Where(x => x.BGType == 2).FirstOrDefault();
                            if (dynamic != null)
                            {
                                bGMonth = dynamic.BGMonth;
                                commisionPercentage = dynamic.CommisionPercentage;
                                bGPercentage = dynamic.BGPercentage;
                                bGAmount = dynamic.BGAmount;
                            }
                            else
                            {
                                bGMonth = dynamic.PerformancePeriod + dynamic.GracePeriod + dynamic.DeliveryMonth;
                                commisionPercentage = 0;
                                bGPercentage = 0;
                                bGAmount = 0;

                            }
                        }
                        else
                        {
                            bGMonth = dynamic.PerformancePeriod + dynamic.GracePeriod + dynamic.DeliveryMonth;
                            commisionPercentage = 0;
                            bGPercentage = 0;
                            bGAmount = 0;
                        }
                    }
                    <td class="TendSrNo">2</td>
                    <td class="sapCode">Performance BG</td>
                    <td class="itemNm"><input type="number" name="PfmMonth" value="@bGMonth" min="0" id="pfmMonth" class="" readonly /></td>
                    <td class="itemCat"><input type="number" name="PfmPercentageComm" placeholder="%" id="pfmcomm" value="@commisionPercentage" class="whiteBgInput" /></td>
                    <td class="Uom"><input type="number" name="PfmPercentageBG" id="pfmBG" value="@bGPercentage" class="whiteBgInput" /></td>@*onchange="SetPfmValues();"*@
                    <td class="TendPrc"><input type="number" name="PfmBGAmt" id="PfmBGAmt" value="@bGAmount" readonly /></td>
                    <td class="Tendcost"><input type="number" name="PfmTotalBGPercentage" id="PfmTotalBGPercentage" readonly /></td>
                </tr>
                <tr>
                    @{
                        if (Model != null && Model.Any())
                        {
                            dynamic = new ExpandoObject();
                            dynamic = Model.Where(x => x.BGType == 3).FirstOrDefault();
                            if (dynamic != null)
                            {
                                bGMonth = dynamic.BGMonth;
                                commisionPercentage = dynamic.CommisionPercentage;
                                bGPercentage = dynamic.BGPercentage;
                                bGAmount = dynamic.BGAmount;
                            }
                            else
                            {
                                bGMonth = 0;
                                commisionPercentage = 0;
                                bGPercentage = 0;
                                bGAmount = 0;
                            }
                        }
                        else
                        {
                            bGMonth = 0;
                            commisionPercentage = 0;
                            bGPercentage = 0;
                            bGAmount = 0;
                        }
                    }
                    <td class="TendSrNo">3</td>
                    <td class="sapCode">Retention BG</td>
                    <td class="itemNm"><input type="number" name="RetMonth" value="@bGMonth" min="0" id="retMonth" class="whiteBgInput" /></td>
                    <td class="itemCat"><input type="number" name="RetPercentageComm" value="@commisionPercentage" id="retComm" class="whiteBgInput" /></td>
                    <td class="Uom"><input type="number" name="RetPercentageBG" id="retBG" value="@bGPercentage" class="whiteBgInput" /></td>@*onchange="RetValues();"*@
                    <td class="TendPrc"><input type="number" id="RetBGAmt" name="RetBGAmt" value="@bGAmount" readonly /></td>
                    <td class="Tendcost"><input type="number" id="RetTotalBGPercentage" name="RetTotalBGPercentage" readonly /></td>
                </tr>
            </table>
        </div>

        <div class="ModelFooter tableBlock">
            <table class="table m-0">
                <tr>
                    <td class="TendSrNo"></td>
                    <td colspan="5" class="text-left">BG Commission %</td>
                    <td class="Tendcost"><input type="number" id="TotalCalcBG" readonly /></td>
                </tr>
            </table>
        </div>
    </div>
}
<script>

    function SetAdvValues() {
        var month = Number($('#advMonth').val());
        var comm = Number($('#advcomm').val());
        var bg = Number($('#advBG').val());
        ////
        if (bg > 0) {
            var amt = (Number(($('#contractVal').val() * bg) / 100));
            var BGCost = (Number((amt * comm * month) / (100 * 12)));
            $('#AdvBGAmt').val(Number(amt).toFixed(3))
            $('#ADVTotalBGPercentage').val(Number(BGCost).toFixed(3));
        }
        else {
            $('#AdvBGAmt').val(0);
            $('#ADVTotalBGPercentage').val(0);
        }
        var totalBGPercentage = (Number($('#ADVTotalBGPercentage').val()) + Number($('#PfmTotalBGPercentage').val()) + Number($("#RetTotalBGPercentage").val()));
        //ShowSnackBar(totalBGPercentage);
        if (!isNaN(totalBGPercentage)) {
            totalBGPercentage = totalBGPercentage.toFixed(3);
        }
        $('#TotalCalcBG').val(Number(totalBGPercentage).toFixed(3));
    }

    function SetPfmValues() {
        var month = $('#pfmMonth').val();
        var comm = $('#pfmcomm').val();
        var bg = $('#pfmBG').val();
        //
        if (bg > 0) {
            var amt = (Number(($('#contractVal').val() * bg) / 100));
            var BGCost = (Number((amt * comm * month) / (100 * 12))).toFixed(2);

            $('#PfmBGAmt').val(Number(amt).toFixed(3))
            $('#PfmTotalBGPercentage').val(Number(BGCost).toFixed(3));
        }
        else {
            $('#PfmBGAmt').val(0);
            $('#PfmTotalBGPercentage').val(0);
        }
        //var totalBGPercentage = ($('#ADVTotalBGPercentage').val() + $('#PfmTotalBGPercentage').val() + $("#RetTotalBGPercentage").val());
        var totalBGPercentage = (Number($('#ADVTotalBGPercentage').val()) + Number($('#PfmTotalBGPercentage').val()) + Number($("#RetTotalBGPercentage").val()));
        //ShowSnackBar(totalBGPercentage);
        if (!isNaN(totalBGPercentage)) {
            totalBGPercentage = totalBGPercentage.toFixed(3);
        }
        $('#TotalCalcBG').val(Number(totalBGPercentage).toFixed(3));
        return false;
    }

    function RetValues() {
        var month = $('#retMonth').val();
        var comm = $('#retComm').val();
        var bg = $('#retBG').val();
        //
        if (bg > 0) {
            var amt = (Number(($('#contractVal').val() * bg) / 100));
            var BGCost = (Number((amt * comm * month) / (100 * 12)));
            $('#RetBGAmt').val(Number(amt).toFixed(3))
            $('#RetTotalBGPercentage').val(Number(BGCost).toFixed(3));
        }
        else {
            $('#RetBGAmt').val(0);
            $('#RetTotalBGPercentage').val(0);
        }
        var totalBGPercentage = (Number($('#ADVTotalBGPercentage').val()) + Number($('#PfmTotalBGPercentage').val()) + Number($("#RetTotalBGPercentage").val()));
        //ShowSnackBar(totalBGPercentage);
        if (!isNaN(totalBGPercentage)) {
            totalBGPercentage = totalBGPercentage.toFixed(3);
        }
        $('#TotalCalcBG').val(Number(totalBGPercentage).toFixed(3));
    }

    function SaveBGData() {
        var formSerialized = $("#BGCommisionForm").serialize();
        formSerialized = formSerialized + "&TenderNo=" + $("#tndId").val() + "&TenderRevisionNo=" + $("#tndRevId").val();
        $.ajax({
            type: 'POST',
            url: "/TenderPricing/SaveBGData",
            data: formSerialized,
            dataType: "json",
            async: false,
            success: function (data) {
                if (data) {
                    $(".modal").modal('hide');
                    debugger;
                    SubmitMarkup();
                    //SubmitFreight();
                    window.location.reload();
                    //successModal();
                }
                else {
                    failureModal('creation');
                }
            },
            error: function (response) {
            }
        });
    }

    function setValues() {
        //
        $("#pfmMonth").val(Number($("#deliveryMonths").val()) + Number($("#performancePeriod").val()) + Number($("#gracePeriod").val()));

        SetAdvValues();
        SetPfmValues();
        RetValues();
    }

    $(document).ready(function () {
        setValues();
        $('#advBG,#advMonth,#advcomm').focusout(function () {
            SetAdvValues();
        });

        $('#pfmBG,#pfmMonth,#pfmcomm').focusout(function () {
            SetPfmValues();
        });

        $('#retBG,#retMonth,#retComm').focusout(function () {
            RetValues();
        });

        $('#deliveryMonths,#contractVal,#performancePeriod,#gracePeriod').focusout(function () {
            setValues();
        });

        if ($("#isPageEditable").val() != "True" && $("#isPageEditable").val() != "true") {
            $("input").attr('readonly', true);
            $("input").removeClass("whiteBgInput");
            $("input").removeClass("p-1");
            $("button").not(".close").hide();
            $("input[type='button']").hide();
        }
    });

</script>