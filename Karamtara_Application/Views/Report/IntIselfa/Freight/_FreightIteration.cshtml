@using Karamtara_Application.Models.Tender
@model IntFreightModel
@using System.Dynamic;
@{
    decimal value = 0;
    TenderPortDetails portDetails = null;
}
<div class="BomRefDtls intfreightTabs" tndFrtRevNo="@Model.TndRevNo">
    <div class="closeMenu">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="col-sm-12 row BomRefHeader m-0">
        FREIGHT DISTRIBUTION
    </div>
    @if (Model.TenderPortNames != null && Model.TenderPortNames.Any())
    {

        <div class="col-sm-12 row BomRefItem m-0 pb-0 pt-0">
            <div class="col-sm-8 ">
                <div class="row addMarkInput portTabHeadingContainer">
                    @{
                        foreach (var item in Model.TenderPortNames)
                        {
                            <div class="col-sm-2 pb-2 pt-2 pl-0 pr-0 text-center c-pointer activePort" currencyvalue="@item.CurrencyValue" currencyname="@item.CurrencyName" onclick="SetActiveTab(this)">
                                @item.PortName
                            </div>
                        }

                    }
                </div>
            </div>
            <div class="col-sm-4 text-right">
                <button type="button" class="submitEnq revisionBtn" onclick="closeModal()">Cancel</button>
                <button type="button" id="btnSubmitFreight" class="submitEnq publishBtn">Submit</button>
            </div>
        </div>
        using (Html.BeginForm("SaveFreightCharges", "IntTenderPricing", FormMethod.Post, new { @id = "SeaFreightForm", @autocomplete = "off" }))
        {
            <input type="hidden" name="tndId" id="frtTndId" />
            <input type="hidden" name="tndRevId" id="frtTndRevId" />

            foreach (var item in Model.TenderPortNames)
            {
                <input type="hidden" name="PortId" value="@item.Id" />
                <div class="portTabs" style="display:none" portid="@item.Id">
                    <div class="col-sm-12 row BomRefHeader m-0">
                    </div>
                    <div class="col-sm-12 BomRefHeader d-flex align-items-center m-0 p-2 " style="color:#000">
                        <div class="row w-100">
                            <div class="col-sm-9 d-flex  align-items-center">
                                Sea Freight
                            </div>
                            <div class="col-sm-3 text-right">
                                <div class="d-flex frightUSD align-items-center">
                                    <input type="number" id="SeaFreight" onblur="SetOceanFrt(this)" value="@item.SeaFreight" name="SeaFreight" />
                                    <p class="ml-1"> @item.CurrencyName</p>
                                </div>
                            </div>
                            <div class="col-sm-9 d-flex  align-items-center">
                                Sea Freight 40FT Container
                            </div>
                            <div class="col-sm-3 text-right">
                                <div class="d-flex frightUSD align-items-center">
                                    <input type="number" id="SeaFreightFortyFT" onblur="SetOceanFrt(this)" value="@item.SeaFreightFortyFT" name="SeaFreightFortyFT" />
                                    <p class="ml-1"> @item.CurrencyName</p>
                                </div>

                            </div>
                            <div class="col-sm-9 d-flex  align-items-center">
                                Packing material weight as Percentage
                            </div>
                            <div class="col-sm-3 text-right">
                                <div class="d-flex frightUSD align-items-center">
                                    @item.PackingPercentage
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tableBlock TenderDtlModelTable">
                        <table class="table m-0 frtTable">
                            <tr>
                                <th class="frightDes" colspan="3">@item.PortName</th>
                            </tr>
                            <tr>
                                <th class="frightPrice">@item.CurrencyName</th>
                                <th class="frightPriceINR">Rupees</th>
                                <th class="frightPriceINR"></th>
                            </tr>
                            <tr>
                                <td class="frightPrice"><input type="text" id="OceanFrtPerMt" readonly="readonly" /></td>@*name="OceanFrtPerMt"*@
                                <td class="frightPriceINR"><input type="text" id="OceanFrtPerMtRs" readonly="readonly" /></td>@*name="OceanFrtPerMt"*@
                                <th class="frightPriceINR"></th>
                            </tr>
                            <tr class="totalFrightPrc">
                                <td class="frightPrice"></td>
                                <td class="frightPriceINR"><input type="text" id="TotalPrice" readonly /></td>@*name="TotalPrice"*@
                                <th class="frightPriceINR"></th>
                            </tr>
                            <tr>
                                <th class="frightPrice">@item.CurrencyName</th>
                                <th class="frightPriceINR" >Rupees</th>
                                <th class="frightPriceINR"></th>
                            </tr>
                            <tr>
                                <td class="frightPrice"><input type="text" id="OceanFrtPerMtFortyFT" readonly="readonly" /></td>@*name="OceanFrtPerMt"*@
                                <td class="frightPriceINR" ><input type="text" id="OceanFrtPerMtRsFortyFT" readonly="readonly" /></td>@*name="OceanFrtPerMt"*@
                                <th class="frightPriceINR"></th>
                            </tr>
                            <tr class="totalFrightPrc">
                                <td class="frightPrice"></td>
                                <td class="frightPriceINR" ><input type="text" id="TotalPriceFortyFT" readonly /></td>@*name="TotalPrice"*@
                                <th class="frightPriceINR"></th>
                            </tr>

                            <tr>
                                <th class="FrightData">Data</th>
                                <th class="FreightTotal  text-center">Total Cost</th>
                                <th class="FreightRemark">Remarks</th>
                            </tr>
                            <tr class="subHeadingTH">
                                <td class="FrightData"></td>
                                <td class="FreightTotalINR  text-center">INR</td>
                                <td class="FreightRemark"></td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "TotalWeightAbc").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="TotalWeight" id="TotalWeight" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR"><input type="number" name="TotalWeight" id="TotalWeightRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SupplyByContainer").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="SupplyByContainer" id="SupplyByContainer" value="4.36" readonly /></td>@*value="@portDetails.Data"*@
                                <td class="FreightTotalINR  text-center"><input type="number" name="SupplyByContainer" value="@portDetails.Cost" id="SupplyByContainerRs" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SupplyByAir").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="SupplyByAir" id="SupplyByAir" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="SupplyByAir" value="@portDetails.Cost" id="SupplyByAirRs" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "CostEstimates").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="CostEstimates" id="CostEstimates" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="CostEstimates" value="@portDetails.Cost" id="CostEstimatesRs" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr class="GreyHeadRow">
                                <td class="FrightData"></td>
                                <td class="FreightTotalINR  text-center"></td>
                                <td class="FreightRemark"></td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "NoOfFtContainers").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="NoOfFtContainers" id="NoOfFtContainers" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="NoOfFtContainers" id="NoOfFtContainersRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "NoOfFtContainersOverridden").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="NoOfFtContainersOverridden" id="NoOfFtContainersOverridden" onblur="SetSeaFrtPerContainer()" value="@portDetails.Data" class="whiteBgInput" /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="NoOfFtContainersOverridden" id="NoOfFtContainersRsOverridden" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SeaFrtPerContainer").FirstOrDefault() ?? new TenderPortDetails();

                                    }
                                }
                                <td class="FrightData"><input type="number" name="SeaFrtPerContainer" id="SeaFrtPerContainer" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="SeaFrtPerContainer" id="SeaFrtPerContainerRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "NoOfFortyFtContainers").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="NoOfFortyFtContainers" id="NoOfFortyFtContainers" onblur="SetSeaFrtPerContainer()" value="@portDetails.Data" class="whiteBgInput" /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="NoOfFortyFtContainers" id="NoOfFortyFtContainersRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SeaFrtPerFortyFtContainer").FirstOrDefault() ?? new TenderPortDetails();

                                    }
                                }
                                <td class="FrightData"><input type="number" name="SeaFrtPerFortyFtContainer" id="SeaFrtPerFortyFtContainer" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="SeaFrtPerFortyFtContainer" id="SeaFrtPerFortyFtContainerRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SeaFrtPerMT").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="SeaFrtPerMT" id="SeaFrtPerMT" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="SeaFrtPerMT" id="SeaFrtPerMT" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "SeaFrtPerMTRound").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="SeaFrtPerMTRound" id="SeaFrtPerMTRound" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="SeaFrtPerMTRound" id="SeaFrtPerMTRoundRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr class="font-weight-bold">
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "TotalSeaFreight").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="TotalSeaFreight" id="TotalSeaFreight" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="TotalSeaFreight" id="TotalSeaFreightRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr class="GreyHeadRow">
                                <td class="FrightData">@*<input type="text" name="AirFreightCost" value="" />*@</td>
                                <td class="FreightTotalINR  text-center"></td>
                                <td class="FreightRemark"></td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "FreightToAirport").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="FreightToAirport" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="FreightToAirport" id="FreightToAirportRs" value="@portDetails.Cost" onblur="SetTotalCostAir()" /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr>
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "FreightPerKg").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="FreightPerKg" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="FreightPerKg" id="FreightPerKgRs" value="@portDetails.Cost" onblur="SetTotalCostAir()" /></td>
                                <td class="FreightRemark  text-center">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr class="font-weight-bold">
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "TotalCostAir").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="TotalCostAir" id="TotalCostAir" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="TotalCostAir" id="TotalCostAirRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                            <tr class="bgBlue">
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "OverallTotal").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="OverallTotal" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" id="OverallTotalRs" name="OverallTotal" id="OverallTotalRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark">
                                    @portDetails.Remarks
                                </td>
                            </tr>
                        </table>
                    </div>
                    @*<div class="tableBlock frghtChargBlk">
                        <table class="table m-0">
                            <tr class="bgBlue">
                                @{
                                    portDetails = new TenderPortDetails();
                                    if (Model.TenderPortDetails != null && Model.TenderPortDetails.Any())
                                    {
                                        portDetails = Model.TenderPortDetails.Where(x => x.PortId == item.Id && x.Description == "OverallTotal").FirstOrDefault() ?? new TenderPortDetails();
                                    }
                                }
                                <td class="FrightData"><input type="number" name="OverallTotal" value="@portDetails.Data" readonly /></td>
                                <td class="FreightTotalINR  text-center"><input type="number" name="OverallTotal" id="OverallTotalRs" value="@portDetails.Cost" readonly /></td>
                                <td class="FreightRemark">
                                    <input type="hidden" class="OverallTotalRmks" name="OverallTotal" value="@portDetails.Remarks" />
                                </td>
                            </tr>
                        </table>
                    </div>*@
                </div>

            }

        }
    }
    else
    {
        <div class="d-flex align-center p-5">Please add port(s) to assign freight charges</div>
    }
    <table class="iterationTable"></table>
</div>
<script>
    var activePortHeading, activePortTab, tndFrtRevDiv = $.find("div[tndFrtRevNo='"+@Model.TndRevNo+"']"),intTndValues = @Html.Raw(Json.Encode(Model.IntTndValues));

    //$(tndFrtRevDiv).find(document).ready(function () {
    if (intTenderType == 1) {
        $(tndFrtRevDiv).find("#dollarsPerCont").hide();
    }


    $(tndFrtRevDiv).find("#frtTndId").val($(tndFrtRevDiv).find("#tndId").val());
    $(tndFrtRevDiv).find("#frtTndRevId").val($(tndFrtRevDiv).find("#tndRevId").val());

    var elements = $(tndFrtRevDiv).find('.portTabs');
    debugger;
    $.each(elements, function (index, ele) {
        activePortHeading = $(tndFrtRevDiv).find(".portTabHeadingContainer").find('.activePort').eq(index);
        activePortTab = ele;
        SetFrtValues();
        var seaFrtElement = $(tndFrtRevDiv).find(activePortTab).find("#SeaFreight");
        SetOceanFrt(seaFrtElement);
        seaFrtElement = $(tndFrtRevDiv).find(activePortTab).find("#SeaFreightFortyFT");
        SetOceanFrt(seaFrtElement);
    });

    activePortHeading = $(tndFrtRevDiv).find(".portTabHeadingContainer").find('.activePort').eq(0);
    activePortTab = $(tndFrtRevDiv).find('.portTabs').eq(0);
    $(tndFrtRevDiv).find(activePortHeading).css("border-bottom", "3px solid #4CB684");
    $(tndFrtRevDiv).find(activePortTab).removeAttr("style");

    elements = $(tndFrtRevDiv).find('.frtTable');
    $.each(elements, function (count, ele) {
        if (count > 0) {
            $(ele).find("tr").each(function (index, item) {
                $(elements).eq(0).find("tr").eq(index).append($(item).children().not(".notReq"));
            });
        }
    });
    if (elements.length > 0) {
        $(tndFrtRevDiv).find(".iterationTable").append($(elements).eq(0).find("tr"));
        //$(tndFrtRevDiv).find(".iterationTable").prepend('<tr><th class="TenderRevisonName" colspan="3">Revision' + @Model.TndRevNo + '</th></tr>');
        $(tndFrtRevDiv).find(".iterationTable").prepend('<tr><th class="TenderRevisonName" colspan="' + @(Model.TenderPortNames.Count * 3) + '">Revision' + @Model.TndRevNo + '</th></tr>');

    }



    $(tndFrtRevDiv).find('.FreightRemark img').hover(function () {
        console.log($(tndFrtRevDiv).find(this).siblings('input').val());
        if ($(tndFrtRevDiv).find(this).siblings('input').val().length == 0) {
            $(tndFrtRevDiv).find(this).parent().removeClass('tooltipHover');
        }

    })

    if ($(tndFrtRevDiv).find("#isPageEditable").val() != "True" && $(tndFrtRevDiv).find("#isPageEditable").val() != "true") {
        $(tndFrtRevDiv).find("input").attr('readonly', true);
        $(tndFrtRevDiv).find(".bgBlue").find(".whiteBgInput").css("color", "#fff");
        //$(tndFrtRevDiv).find(".bgBlue").find(".whiteBgInput").css("font-weight","bold");
        $(tndFrtRevDiv).find("input").removeClass("whiteBgInput");
        $(tndFrtRevDiv).find("input").removeClass("p-1");
        $(tndFrtRevDiv).find("button").not(".closeModal,.close").hide();
        $(tndFrtRevDiv).find("input[type='button']").hide();
        $(tndFrtRevDiv).find("select").attr("disabled", true);
    }

    function SetFrtValues() {

        //$(tndFrtRevDiv).find(".PackingPercentage").text($(tndFrtRevDiv).find("#PackingPercentage").val());
        var totalUnitWtMt = 0; 
        if (intTndValues.filter(x => x.Description == "TotalUnitWtMT").length > 0)
            totalUnitWtMt = intTndValues.filter(x => x.Description == "TotalUnitWtMT")[0].Value;

        $(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val(totalUnitWtMt);
        $(tndFrtRevDiv).find(activePortTab).find("#TotalWeight").val($(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val());

        //var NoOfContainer = Math.ceil(Number($(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val()) / 16);
        //$(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainers").val(NoOfContainer.toFixed(0));


        //var totalPrice = Number($(tndFrtRevDiv).find(activePortTab).find("#TotalPrice").val()).toFixed(3);
        //$(tndFrtRevDiv).find(activePortTab).find("#SeaFrtPerContainerRs").val(totalPrice);

        //$(tndFrtRevDiv).find(activePortTab).find("#TotalSeaFreightRs").val(Number(NoOfContainer * totalPrice).toFixed(3));

        var totCostAir = Number($(tndFrtRevDiv).find(activePortTab).find("#FreightToAirportRs").val()) + Number($(tndFrtRevDiv).find(activePortTab).find("#FreightPerKgRs").val());
        $(tndFrtRevDiv).find(activePortTab).find("#TotalCostAirRs").val(totCostAir.toFixed(3));

    }

    function SetActiveTab(element) {
        activePortHeading = element;
        activePortTab = $(tndFrtRevDiv).find('.portTabs').eq($(tndFrtRevDiv).find(element).index());
        $(tndFrtRevDiv).find('.portTabs').css("display", "none");
        $(tndFrtRevDiv).find(".activePort").css("border-bottom", "none");
        $(tndFrtRevDiv).find(element).css("border-bottom", "3px solid #4CB684");
        $(tndFrtRevDiv).find(activePortTab).removeAttr("style");
        SetFrtValues();
    }

    function SubmitRemarks(portId, inputId) {
        $(tndFrtRevDiv).find("#testmasterDtls").css('display', "block");
        var text = $(tndFrtRevDiv).find("div[portid=" + portId + "]").find("." + inputId).closest("input").val();

        text = $.trim(text);
        text = text == "-" ? "" : text;
        var html =
            '< div id = "myModal" class="modal fade" role = "dialog" >' +
            ' <div class="modal-dialog modal-dialog-centered ">' +
            '<div class="modal-content">' +
            ' <div class="modal-body">' +
            '<div class="BomRefDtls">' +
            '<div class="col-sm-12 row BomRefHeader m-0">' +
            '<div class="col-sm-12 text-right">' +
            '<button type="button" class="submitEnq revisionBtn" onclick="CloseRemarkModal()" data-dismiss="modal">Cancel</button>' +
            '<button type="button" class="submitEnq publishBtn" onclick="SetRemark(' + portId + ',&quot;' + inputId + '&quot;)" data-dismiss="modal">Submit</button>' +
            '</div>' +
            '</div>' +
            '<div class="col-sm-12 row BomRefHeader m-0 testMasterheader d-flex align-items-center">' +
            'Add Remarks:    <input type="text" id="txtRemark" value="' + text + '" class="whiteBgInput ml-2 w-100">' +
            '</div>' +
            '</div>' +
            '</div></div></div></div>';

        $(tndFrtRevDiv).find("#testmasterDtls").html(html);
        $(tndFrtRevDiv).find("#testmasterDtls").modal('show');
    }

    function SetRemark(portId, inputId) {
        $(tndFrtRevDiv).find("div[portid=" + portId + "]").find("span." + inputId).text($(tndFrtRevDiv).find("#txtRemark").val());
        $(tndFrtRevDiv).find("div[portid=" + portId + "]").find("input." + inputId).val($(tndFrtRevDiv).find("#txtRemark").val());
        $(tndFrtRevDiv).find("#testmasterDtls").css('display', "none");
        $(tndFrtRevDiv).find('.FreightRemark img').parent().addClass('tooltipHover');
    }

    function CloseRemarkModal() {
        $(tndFrtRevDiv).find("#testmasterDtls").css('display', "none");
    }

    function SetOceanFrt(element) {
        var value, oceanFrtPerMtRs, NoOfContainer, containerType, pckPercentage = 0;
        
        if (intTndValues.filter(x => x.Description == "PackingPercentage").length > 0)
            pckPercentage = intTndValues.filter(x => x.Description == "PackingPercentage")[0].Value;

        value = Number($(tndFrtRevDiv).find(element).val()) * pckPercentage;
        oceanFrtPerMtRs = value * Number($(tndFrtRevDiv).find(activePortHeading).attr("currencyvalue"));
        containerType = $(tndFrtRevDiv).find(element).attr("name");


        if (containerType == "SeaFreightFortyFT") {
            NoOfContainer = Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFortyFtContainers").val());
            $(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMtFortyFT").val(value.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMtRsFortyFT").val(oceanFrtPerMtRs.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#TotalPriceFortyFT").val(oceanFrtPerMtRs.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#SeaFrtPerFortyFtContainerRs").val(oceanFrtPerMtRs.toFixed(3));
        }
        else {
            NoOfContainer = Math.ceil(Number($(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val()) / 16);
            $(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainers").val(NoOfContainer.toFixed(0));

            if (Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainersOverridden").val()) <= 0) {
                NoOfContainer = Math.ceil(Number($(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val()) / 16);
            }
            else {
                NoOfContainer = Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainersOverridden").val());
            }

            $(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMt").val(value.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMtRs").val(oceanFrtPerMtRs.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#TotalPrice").val(oceanFrtPerMtRs.toFixed(3));
            $(tndFrtRevDiv).find(activePortTab).find("#SeaFrtPerContainerRs").val(oceanFrtPerMtRs.toFixed(3));
        }
        SetTotalSeaFreightRs();
        SetOverallTotal();
    }

    function SetSeaFrtPerContainer() {
        SetTotalSeaFreightRs()
        SetOverallTotal();
    }

    function SetTotalSeaFreightRs() {

        var noOfContainer, noOfFortyFtContainer, totalSeaFrt;

        if (Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainersOverridden").val()) <= 0) {
            noOfContainer = Math.ceil(Number($(tndFrtRevDiv).find(activePortTab).find("#SupplyByContainer").val()) / 16);
        }
        else {
            noOfContainer = Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFtContainersOverridden").val());
        }
        noOfFortyFtContainer = Number($(tndFrtRevDiv).find(activePortTab).find("#NoOfFortyFtContainers").val());

        totalSeaFrt = ($(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMtRsFortyFT").val() * noOfFortyFtContainer) + ($(tndFrtRevDiv).find(activePortTab).find("#OceanFrtPerMtRs").val() * noOfContainer);
        $(tndFrtRevDiv).find(activePortTab).find("#TotalSeaFreightRs").val(Number(totalSeaFrt).toFixed(3));
    }

    function SetTotalCostAir() {
        var totCostAir = Number($(tndFrtRevDiv).find(activePortTab).find("#FreightToAirportRs").val()) + Number($(tndFrtRevDiv).find(activePortTab).find("#FreightPerKgRs").val());
        $(tndFrtRevDiv).find(activePortTab).find("#TotalCostAirRs").val(totCostAir.toFixed(3));
        SetOverallTotal();
    }

    function SetOverallTotal() {
        debugger;
        var total = Number($(tndFrtRevDiv).find(activePortTab).find("#TotalCostAirRs").val()) + Number($(tndFrtRevDiv).find(activePortTab).find("#TotalSeaFreightRs").val());
        $(tndFrtRevDiv).find(activePortTab).find("#OverallTotalRs").val(total.toFixed(3))
    }

    function SetFinalFrtContent(element) {
        var overallTotal = 0, noOfContainers = 0, noOfFortyFTContainers = 0;
        var elements = $(tndFrtRevDiv).find('.portTabs');
        $.each(elements, function (index, ele) {
            if (Number($(ele).find("#NoOfFtContainersOverridden").val()) <= 0) {
                noOfContainers += isNaN(Math.ceil(Number($(ele).find("#SupplyByContainer").val()) / 16)) ? 0 : Math.ceil(Number($(ele).find("#SupplyByContainer").val()) / 16);
            }
            else {
                noOfContainers += isNaN(Number($(ele).find("#NoOfFtContainersOverridden").val())) ? 0 : Number($(ele).find("#NoOfFtContainersOverridden").val());
            }
            noOfFortyFTContainers += isNaN(Number($(ele).find("#NoOfFortyFtContainers").val())) ? 0 : Number($(ele).find("#NoOfFortyFtContainers").val());
            overallTotal += isNaN(Number($(ele).find("#OverallTotalRs").val())) ? 0 : Number($(ele).find("#OverallTotalRs").val());
        });
        $(tndFrtRevDiv).find("#totalContainers").text(noOfContainers.toFixed(0));
        $(tndFrtRevDiv).find("#totalFortyFTContainers").text(noOfFortyFTContainers.toFixed(0));
        $(tndFrtRevDiv).find("#finalFrtTotal").text(overallTotal.toFixed(3));
        SetActiveTab(element);
    }

    $(tndFrtRevDiv).find("#btnSubmitFreight").click(function () {
        jQuery(".intfreightTabs").find("input").not("input[class$='Rmks'],input[class$='Rmks ']").filter(function () {
            return this.value == "";
        }).val(0);

        jQuery(".intfreightTabs").find("input[class$='Rmks'],input[class$='Rmks ']").filter(function () {
            return $(tndFrtRevDiv).find(this).val() == "";
        }).val("-");

        var form = $(tndFrtRevDiv).find("#SeaFreightForm").serialize();

        $.ajax({
            type: "post",
            url: '/IntTenderPricingKT/SaveFreightCharges',
            dataType: "json",
            data: form,
            async: false,
            success: function (data) {
                if (data) {
                    $(tndFrtRevDiv).find(".modal").modal('hide');
                }
                else {
                    failureModal();
                }
            },
            error: function (courses) {
                failureModal();
            }
        });
    })

</script>