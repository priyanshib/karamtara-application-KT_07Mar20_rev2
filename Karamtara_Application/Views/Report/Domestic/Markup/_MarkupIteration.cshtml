@using System.Data
@model DataTable
@using System.Dynamic;
@{
    dynamic dynamic = new ExpandoObject();
    List<dynamic> list = (List<dynamic>)TempData["TenderLineValues"];
    decimal value = 0;
    int tndRevNo = (int)ViewData["tendorRevNo"];
}

<div class="BomRefDtls MarkupPricingModal"  markuprevno="@tndRevNo">
    <div class="closeMenu">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="col-sm-12 row BomRefHeader m-0">
        ADD MARK UPS
    </div>

    <div class="col-sm-12 row BomRefItem m-0">
        <div class="col-sm-8 ">
            <div class="row addMarkInput">
                <div class="col-sm-4">
                    @{
                        if (list != null && list.Any())
                        {
                            dynamic = new ExpandoObject();
                            dynamic = list.Where(x => x.Description == "InterestRate").FirstOrDefault();
                            if (dynamic != null)
                            {
                                value = dynamic.Value;
                            }
                            else
                            {
                                value = 0;
                            }
                        }
                    }

                    Rate of Interest
                    <p class="d-flex align-items-center mt-1"><input type="text" id="intRate" value="@value" onchange="setTotal()" />%</p>
                </div>
                @*<div class="col-sm-4">
                        Credit Period
                        <p class="d-flex align-items-center mt-1"><input type="text" />Days</p>
                    </div>
                    <div class="col-sm-4">
                        Advance Received
                        <p class="d-flex align-items-center mt-1"><input type="text" />Days</p>
                    </div>*@
            </div>

        </div>
        <div class="col-sm-4 text-right">
            <button type="button" class="submitEnq revisionBtn" onclick="closeModal()">Cancel</button>
            <button type="button" id="btnSubmitMarkup" class="submitEnq publishBtn">Submit</button>
        </div>
    </div>


    <div class="tableBlock TenderDtlModelTable ">
        <table class="table m-0 markupListItems iterationTable tableLayout">
            @{
                string colName = "";
            <tr class="rowHeadings">
                <td class="MatkUp" width="500px"></td>
                <td class="TenderRevisonName exclude" colspan="@(Model.Columns.Count - 2)" style="width:@((Model.Columns.Count - 2) * 100)px">Revision @tndRevNo</td>
            </tr>
                <tr class="rowHeadings">
                    <th class="MatkUp" width="500px">Rate of Interest</th>
                    <td class=" exclude text-left" colspan="@(Model.Columns.Count - 2)">@value</td>
                </tr>
                <tr>
                    @foreach (DataColumn col in Model.Columns)
                    {
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            //colName = col.ColumnName.Substring(0, col.ColumnName.LastIndexOf("_"));
                            colName = col.ColumnName;
                            <th class="MarkUpPrc">@colName %</th>
                        }
                        else if (col.ColumnName != "MarkupId")
                        {
                            <th class="MatkUp">@col.ColumnName</th>
                        }
                    }

                </tr>
                int i = 1;

                string lineId = "";
                foreach (DataRow row in Model.Rows)
                {
                    <tr>
                        @foreach (DataColumn col in Model.Columns)
                        {
                            if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                            {

                                lineId = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                                <td class="MarkUpPrc">@Html.TextBox(col.ColumnName, @row[col.ColumnName], new { @id = col.ColumnName + "_" + +(i - 1), @type = "number", @onchange = "setMarkupPricing(this)", @markupId = row["MarkupId"], @lineId = lineId, @class = "whiteBgInput" }) </td>
                            }
                            else if (col.ColumnName != "MarkupId")
                            {
                                <td class="MatkUp">
                                    <div class="col-sm-12 p-0">
                                        <div class="row">

                                            @{
                                                <div class="col-sm-7 d-flex align-items-center">
                                                    @row[col.ColumnName]
                                                </div>

                                                if (row["Description"].ToString().ToUpper() == "FINANCE: MFG WIP")
                                                {
                                                    if (list != null && list.Any())
                                                    {
                                                        dynamic = new ExpandoObject();
                                                        dynamic = list.Where(x => x.Description == "FinMfgDays").FirstOrDefault();
                                                        if (dynamic != null)
                                                        {
                                                            value = dynamic.Value;
                                                        }
                                                        else
                                                        {
                                                            value = 0;
                                                        }
                                                    }
                                                    <div class="col-sm-5 d-flex p-2 text-right justify-content-between">
                                                        @*<div class="row">*@
                                                            <div class="">
                                                                @Html.TextBox("finMfgDays", value, new { @id = "finMfgDays", @type = "number", @onchange = "setTotal()", @class = "whiteBgInput" })
                                                            </div>
                                                            <div class="">
                                                                D
                                                            </div>
                                                        @*</div>*@

                                                    </div>


                                                }
                                                else if (row["Description"].ToString().ToUpper() == "FINANCE: SALES CR.")
                                                {

                                                    if (list != null && list.Any())
                                                    {
                                                        dynamic = new ExpandoObject();
                                                        dynamic = list.Where(x => x.Description == "FinSalesDays").FirstOrDefault();
                                                        if (dynamic != null)
                                                        {
                                                            value = dynamic.Value;
                                                        }
                                                        else
                                                        {
                                                            value = 0;
                                                        }
                                                    }

                                                    <div class="col-sm-5 d-flex p-2 text-right justify-content-between">
                                                        @*<div class="row">*@
                                                            <div class="">
                                                                @Html.TextBox("finSalesDays", value, new { @id = "finSalesDays", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" })
                                                            </div>
                                                            <div class="">
                                                                D
                                                            </div>
                                                        @*</div>*@
                                                    </div>
                                                }
                                                else if (row["Description"].ToString().ToUpper() == "INTEREST SAVING ON ADVANCE")
                                                {
                                                    <div class="col-sm-5 p-0">
                                                        <div class="d-flex p-2 text-right justify-content-between">
                                                            <div class="">
                                                                @{
                                                                    if (list != null && list.Any())
                                                                    {
                                                                        dynamic = new ExpandoObject();
                                                                        dynamic = list.Where(x => x.Description == "IntSavingAdvDays").FirstOrDefault();
                                                                        if (dynamic != null)
                                                                        {
                                                                            value = dynamic.Value;
                                                                        }
                                                                        else
                                                                        {
                                                                            value = 0;
                                                                        }
                                                                    }
                                                                }
                                                                @Html.TextBox("intSavingAdv", value, new { @id = "intSavingAdvDays", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" })
                                                            </div>
                                                            <div class="">
                                                                D
                                                            </div>
                                                        </div>
                                                        <div class="d-flex p-2 text-right justify-content-between">
                                                            <div class="">
                                                                @{
                                                                    if (list != null && list.Any())
                                                                    {
                                                                        dynamic = new ExpandoObject();
                                                                        dynamic = list.Where(x => x.Description == "IntSavingAdvMnths").FirstOrDefault();
                                                                        if (dynamic != null)
                                                                        {
                                                                            value = dynamic.Value;
                                                                        }
                                                                        else
                                                                        {
                                                                            value = 0;
                                                                        }
                                                                    }
                                                                }

                                                                @Html.TextBox("intSavingAdv", value, new { @id = "intSavingAdvMnths", @onchange = "setTotal()", @type = "number", @class = "whiteBgInput" })
                                                            </div>
                                                            <div class="">
                                                                M
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                </td>

                            }
                        }
                    </tr>
                    i = i + 1;
                }
            }

            <tr class="subTotalTR">
                <td class="SubMatkUp">SUB TOTAL</td>
                @{
                    string line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="MarkUpPrc" lineid="@line"></td>
                        }
                    }
                }
                @*<td class="itemPerc">80.40</td>
            <td class="itemPerc">80.40</td>
            <td class="itemPerc">80.40</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingCharge">
                <td class="MatkUp">Testing</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Testing").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="markUpPrc" lineid="@line">@value</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingChargeOverride">
                <td class="MatkUp">Override Testing Charges</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TestingOverride").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = lineId, @onchange = "setTotal()", @class = "whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>
            <tr class="font-weight-bold" id="testingOverrideRemarks">
                <td class="MatkUp">Remarks</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            string remarks = "";
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TestingOverrideRemarks").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    remarks = dynamic.Remarks;
                                }
                                else
                                {
                                    remarks = "";
                                }
                            }
                            <td class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, remarks, new { @lineId = lineId, @onchange = "setTotal()", @class = "whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">15972</td>*@
            </tr>

            <tr id="travelCharge">
                <td class="MatkUp">Travel, Lodging & Boarding</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "TravelLB").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = lineId, @onchange = "setTotal()", @class = "whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc"></td>*@
            </tr>
            <tr id="devCharge">
                <td class="MatkUp">Developement</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Developement").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="markUpPrc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = lineId, @onchange = "setTotal()", @class = "whiteBgInput" })</td>
                        }
                    }
                }
                @*<td class="itemPerc" lineid="3">10002</td>*@
            </tr>
            <tr class="otherTotalBlock">
                <td class="MatkUp">Other Total (A)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="markUpPrc" lineid="@line">11111</td>
                        }
                    }
                }
            </tr>
            <tr class="lineUnitCostBlock">
                <td class="MatkUp">Total Cost (RM) (B)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "LineUnitCost").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="itemPerc" lineid="@line">@value</td>
                        }
                    }
                }
            </tr>
            @*<td class="itemPerc" lineid="3">25724</td>*@
            <tr class="unitCostBlock">
                <td class="MatkUp">Testing Cost as Percentage of RM Cost (C)</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="markUpPrc" lineid="@line">11111</td>
                        }
                    }
                }
            </tr>
            <tr class="finalTotal">
                <td class="SubMatkUp">SUB TOTAL</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="MarkUpPrc" lineid="@line">80.40</td>
                        }
                    }
                }
            </tr>
            <tr>
                <td class="MatkUp">MARGIN</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Margin").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="itemPerc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setMargin(this)", @class = "whiteBgInput p-1 marginInput" })</td>
                        }
                    }
                }
            </tr>
        </table>
    </div>
    <div class="ModelFooter tableBlock makUpFooter ">
        <table class="table m-0">
            <tr class="finalTotal">
                <td class="markSrNo" style="color:transparent">S.NO.</td>
                <td class="SubMatkUp">SUB TOTAL</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            <td class="MarkUpPrc" lineid="@line">80.40</td>
                        }
                    }
                }
            </tr>
            <tr>
                <td class="markSrNo" style="color:transparent">S.NO.</td>
                <td class="MatkUp">MARGIN</td>
                @{
                    line = "";
                    foreach (DataColumn col in Model.Columns)
                    {
                        line = col.ColumnName.Substring(col.ColumnName.LastIndexOf("_") + 1);
                        if (col.ColumnName != "Description" && col.ColumnName != "MarkupId")
                        {
                            if (list != null && list.Any())
                            {
                                dynamic = new ExpandoObject();
                                dynamic = list.Where(x => x.LineId == Convert.ToInt32(line) && x.Description == "Margin").FirstOrDefault();
                                if (dynamic != null)
                                {
                                    value = dynamic.Value;
                                }
                                else
                                {
                                    value = 0;
                                }
                            }
                            <td class="itemPerc" lineid="@line">@Html.TextBox(col.ColumnName, value, new { @type = "number", @lineId = line, @onchange = "setMargin(this)", @class = "whiteBgInput p-1 marginInput" })</td>
                        }
                    }
                }
            </tr>
        </table>
    </div>
</div>

<script>
    var markupArray = [], marginArray = [], finalTotalArray = [], percToUnitCostArray = [], developement = [], travelLB = [], testing = [], testingRemarks = [], parentDiv = $("div[markuprevno='"+@tndRevNo+"']");
    function setMarkupPricing(element) {
        //
        var markupId = $(parentDiv).find(element).attr("markupid");
        var lineId = $(parentDiv).find(element).attr("lineid");
        var value = $(parentDiv).find(element).val();
        var index = markupArray.findIndex(x => x.lineId === lineId && x.markupId == markupId);
        if (index != -1)
            markupArray.splice(index, 1);
        markupArray.push({ lineId: lineId, markupId: markupId, value: value });
        setTotal();
    }

    function setMargin(element) {

        var lineId = $(parentDiv).find(element).attr("lineid");
        var value = $(parentDiv).find(element).val();
        //if (Number(value) >= 100) {
        //    $(parentDiv).find(element).val(0);
        //    var x = document.getElementById("snackbar");
        //    x.innerHTML = "Margin should be less than 100";
        //    x.className = "snackBarshow";
        //    setTimeout(function () { x.className = x.className.replace("snackBarshow", ""); }, 3000);
        //    return false;
        //}

        var index = markupArray.findIndex(x => x.lineId === lineId);
        if (index != -1)
            markupArray.splice(index, 1);
        marginArray.push({ lineId: lineId, margin: value });
    }

    $(parentDiv).find("#btnSubmitMarkup").click(function () {
        var flag = false;
        var elements = $(parentDiv).find(".marginInput");
        //
        $.each(elements, function (index, ele) {
            var value = $(parentDiv).find(ele).val();
            if (Number(value) >= 100) {
                $(parentDiv).find(ele).val(0);
                var x = document.getElementById("snackbar");
                x.innerHTML = "Margin should be less than 100";
                x.className = "snackBarshow";
                setTimeout(function () { x.className = x.className.replace("snackBarshow", ""); }, 3000);
                flag = true;
                return false;
            }
        });

        if (flag)
            return false;

        var obj = {};
        var array = JSON.stringify(markupArray);
        obj.values = array;
        obj.marginValues = JSON.stringify(marginArray);
        obj.bomId = $("#bomId").val();
        obj.revId = $("#revisionId").val();
        obj.tndId = $("#tndId").val();
        obj.tndRevNo = $("#tndRevId").val();
        obj.developement = JSON.stringify(developement);
        obj.finalTotalArray = JSON.stringify(finalTotalArray);
        obj.percToUnitCostArray = JSON.stringify(percToUnitCostArray);
        obj.testingRemarks = JSON.stringify(testingRemarks);
        obj.travelLB = JSON.stringify(travelLB);
        obj.testing = JSON.stringify(testing);
        obj.interestRate = Number($(parentDiv).find("#intRate").val());
        obj.finSalesDays = Number($(parentDiv).find("#finSalesDays").val());
        obj.finMfgDays = Number($(parentDiv).find("#finMfgDays").val());
        obj.intSavingAdvDays = Number($(parentDiv).find("#intSavingAdvDays").val());
        obj.intSavingAdvMnths = Number($(parentDiv).find("#intSavingAdvMnths").val());
        $.ajax({
            type: "post",
            url: '/TenderPricing/SaveMarkupPricing',
            data: obj,
            success: function (data) {
                if (data) {
                    $(parentDiv).find(".modal").modal('hide');
                    successModal();
                    window.location.reload();
                }
                else {
                    failureModal('creation');
                }
            },
            error: function (courses) {
                // failureModal();
            }
        });
    })

    //$(document).ready(function () {
    $(parentDiv).find(".MarkupPricingModal").find("td").filter(function () {
        return $.trim($(parentDiv).find(this).text().toLowerCase()) == 'pbg';
    }).nextAll().find("input").attr('readonly', 'readonly').removeClass("whiteBgInput");

    setTotal();

    if ($(parentDiv).find("#isPageEditable").val() != "True" && $(parentDiv).find("#isPageEditable").val() != "true") {
        $(parentDiv).find("input").attr('readonly', true);
        $(parentDiv).find(".ModelFooter").find(".whiteBgInput").css("font-weight", "bold");
        $(parentDiv).find(".ModelFooter").find(".whiteBgInput").css("color", "#fff");
        $(parentDiv).find("input").removeClass("whiteBgInput");
        $(parentDiv).find("input").removeClass("p-1");
    }
    //});

    function setTotal() {

        var sum = 0, percToUnitCost = 0, subTotalSum = 0, finalTotal = 0, lineUnitCost = 0, remark = "";
        unitCost = $(parentDiv).find("#tndUnitCost").val();
        percToUnitCostArray = [];
        finalTotalArray = [];
        developement = [];
        travelLB = [];
        testing = [];
        testingRemarks = [];

        $(parentDiv).find("#finSalesDays").closest("tr").find("input").not("#finSalesDays").attr("readonly", "readonly").removeClass("whiteBgInput");
        $(parentDiv).find("#finMfgDays").closest("tr").find("input").not("#finMfgDays").attr("readonly", "readonly").removeClass("whiteBgInput");
        $(parentDiv).find("#intSavingAdvDays").closest("tr").find("input").not("#intSavingAdvDays,#intSavingAdvMnths").attr("readonly", "readonly").removeClass("whiteBgInput");

        var value = Number((((Number($(parentDiv).find("#intRate").val()) / 100) / 360) * Number($(parentDiv).find("#finSalesDays").val())) * 100);
        $(parentDiv).find("#finSalesDays").closest("tr").find("input").not("#finSalesDays").val(value.toFixed(3));

        value = Number((((Number($(parentDiv).find("#intRate").val()) / 100) / 360) * Number($(parentDiv).find("#finMfgDays").val())) * 100);
        $(parentDiv).find("#finMfgDays").closest("tr").find("input").not("#finMfgDays").val(value.toFixed(3));

        value = Number((((Number($(parentDiv).find("#intSavingAdvDays").val()) * (Number($(parentDiv).find("#intRate").val()) / 100)) / 12) * Number($(parentDiv).find("#intSavingAdvMnths").val())) * 100);
        $(parentDiv).find("#intSavingAdvDays").closest("tr").find("input").not("#intSavingAdvDays,#intSavingAdvMnths").val(value.toFixed(3));

        var elements = $(parentDiv).find(".subTotalTR").find("td[lineid]");
        $.each(elements, function (index, ele) {
            var lineId = $(parentDiv).find(ele).attr("lineid");
            var lineElements = $(parentDiv).find(".markupListItems").find("input[lineid='" + lineId + "']");
            $(parentDiv).find(lineElements).each(function () {
                //var match = isDecimal.exec($(parentDiv).find(this).val());
                var value = $(parentDiv).find(this).val();
                if (!isNaN(value) && value != "") {
                    subTotalSum += parseFloat(parseFloat(value).toFixed(2));
                }
            });
            $(parentDiv).find(ele).text(subTotalSum.toFixed(3));
            sum = 0;

            num = $(parentDiv).find("#testingChargeOverride").find("td[lineid='" + lineId + "'] input").val();

            remark = $(parentDiv).find("#testingOverrideRemarks").find("td[lineid='" + lineId + "'] input").val();

            if (!isNaN(num) && num != "") {
                if (num > 0) {
                    sum += parseFloat(parseFloat(num).toFixed(2));
                    testing.push({ lineId: lineId, value: num });
                    testingRemarks.push({ lineId: lineId, value: remark });
                }
                else {
                    num = $(parentDiv).find("#testingCharge").find("td[lineid='" + lineId + "']").text();
                    if (!isNaN(num) && num != "")
                        sum += parseFloat(parseFloat(num).toFixed(2));
                }
            }
            else {
                num = $(parentDiv).find("#testingCharge").find("td[lineid='" + lineId + "']").text();
                if (!isNaN(num) && num != "")
                    sum += parseFloat(parseFloat(num).toFixed(2));
            }

            num = $(parentDiv).find("#devCharge").find("td[lineid='" + lineId + "'] input").val();

            if (!isNaN(num) && num != "")
                sum += parseFloat(parseFloat(num).toFixed(2));

            developement.push({ lineId: lineId, value: num });

            num = $(parentDiv).find("#travelCharge").find("td[lineid='" + lineId + "'] input").val();
            if (!isNaN(num) && num != "")
                sum += parseFloat(parseFloat(num).toFixed(2));

            travelLB.push({ lineId: lineId, value: num });

            $(parentDiv).find(".otherTotalBlock").find("td[lineid='" + lineId + "']").text(sum.toFixed(3));

            lineUnitCost = $(parentDiv).find(".lineUnitCostBlock").find("td[lineid='" + lineId + "']").text();

            if (lineUnitCost != 0 && lineUnitCost != "")
                percToUnitCost = (sum / lineUnitCost) * 100;

            percToUnitCostArray.push({ lineId: lineId, value: percToUnitCost });

            $(parentDiv).find(".unitCostBlock").find("td[lineid='" + lineId + "']").text(percToUnitCost.toFixed(4));

            finalTotal = 1 + (subTotalSum + percToUnitCost) / 100;

            finalTotalArray.push({ lineId: lineId, value: finalTotal });

            $(parentDiv).find(".finalTotal").find("td[lineid='" + lineId + "']").text(finalTotal.toFixed(4));

            sum = 0;
            subTotalSum = 0;
        });
    }
</script>