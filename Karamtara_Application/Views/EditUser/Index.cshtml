@model Karamtara_Application.Models.EditUserDetails

@{
    ViewBag.Title = "Edit Details";

    <div class="modal fade" id="StatusModal" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header modelHeader">
                    <span class="modal-title modalMsgTitle" id="modalTitle">Success</span>
                    @if (TempData["PasswordChanged"] != null && Convert.ToBoolean(TempData["PasswordChanged"]) == true)
                    {
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeButton" onclick="location.href='@Url.Action("Logout","Login")'">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeButton">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    }
                </div>
                <div class="modal-body">
                    <label id="modalBody" class="lableMsg"> Record Updated Successfully. </label>
                </div>
                <div class="modal-footer">
                    @if (TempData["PasswordChanged"] != null && Convert.ToBoolean(TempData["PasswordChanged"]) == true)
                    {
                        <button type="button" class="submitBomBtn publishBtn" id="modalOkButton" data-dismiss="modal" onclick="location.href='@Url.Action("Logout", "Login")'">OK</button>
                    }
                    else
                    {
                        <button type="button" class="submitBomBtn publishBtn" id="modalOkButton" data-dismiss="modal">OK</button>
                    }
                </div>
            </div>
        </div>
    </div>


    if (TempData["Status"] != null && TempData["Status"].ToString() == "Success")
    {
        <script>
                $("#StatusModal").modal('show');
                $("#modalTitle").val('Success');
                $("#modalBody").val('Changes updated successfully');
        </script>
    }
    else if (TempData["Status"] != null && TempData["Status"].ToString() == "Failed")
    {
        <script>
            $("#StatusModal").modal('show');
            $("#modalTitle").val('Failure');
            $("#modalBody").val('Changes update failed');
        </script>
    }
}

@using (Html.BeginForm("SaveDetails", "EditUser", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal loginBlock">
        <div class="text-center"><span>Edit User</span></div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.HiddenFor(model => model.UserId)
        </div>

        <div class="form-group bmd-form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group bmd-form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group bmd-form-group">

            <label class="container mb-0" for="chkPassport">
                Reset Password
                <input type="checkbox" id="chkPassport" onclick="ShowHideDiv(this)" />
                <span class="checkmark" style="width:15px; margin-top:0"></span>
            </label>

        </div>

        <div class="form-group bmd-form-group" id="txtPass" style="display:none">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "mvcInputErrors" })
        </div>

        <div class="form-group bmd-form-group" id="txtConPass" style="display:none">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label " })
            @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "mvcInputErrors" })

        </div>

        <div class="form-group bmd-form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

        </div>

        <div class="form-group bmd-form-group salutnDiv">
            @Html.LabelFor(model => model.Salutation, htmlAttributes: new { @class = "control-label " })

            @Html.DropDownListFor(m => m.Salutation, new List<SelectListItem>
            {   new SelectListItem{ Text="Mr",Value="Mr"},
                new SelectListItem{ Text="Mrs",Value="Mrs"},
                new SelectListItem{ Text="Ms",Value="Ms"} })

        </div>

        <div class="form-group bmd-form-group updateBtn text-center">
            <input type="submit" value="Update" class="btn" />
        </div>
    </div>
}

<script>

    function ShowHideDiv(chkPassport) {
        var dvPass = document.getElementById("txtPass");
        var dvConPass = document.getElementById("txtConPass");
        dvPass.style.display = chkPassport.checked ? "block" : "none";
        dvConPass.style.display = chkPassport.checked ? "block" : "none";
    };

</script>

